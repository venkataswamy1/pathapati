<app name="Slack">

	<feature>from-user-constraint-profile-enabled</feature>
	<feature>to-user-constraint-profile-enabled</feature>
	<feature>dlp-enabled</feature>
	<feature>file-size-enabled</feature>
	<feature>encryption-enabled</feature>
	<feature>dlp-and-encryption-enabled</feature>
	<feature>constraint-profile-and-bypass-enabled</feature>
	<ui>
		<name>Slack</name>
		<description>
            Slack.com
		</description>
	</ui>

	<!--  <id user-notification="yes">  -->  
	<id > 	
		<match field="host" mtype="dns" rhs="slack\.com" /> 
		<match field="host" mtype="dns" rhs="slack-files\.com" />  
	</id>

	<vars>
		<var name="lstr1" scope="flow-context" vtype="largestring">
            <ui>
                <name>Large String</name>
                <description>
                    Large String for extraction of from_user
                </description>
            </ui>
        </var>
		<var name="object" scope="flow-context" vtype="string">
			<ui>
				<name> object </name>
				<description>
                    Name of object
				</description>
			</ui>
		</var>
		<var name="chat_message" scope="flow-context" vtype="cibuffer">
			<ui>
				<name>object</name>
				<description>
                    object
				</description>
			</ui>
		</var>

		<var name="from_user" scope="app-session" vtype="string">
			<ui>
				<name>From User</name>
				<description>
                    From User
				</description>
			</ui>
		</var>

		<var name="object_type" scope="flow-context" vtype="string">
			<ui>
				<name>object Type</name>
				<description>
                    Type of object
				</description>
			</ui>
		</var>

		<var name="tmpShare" scope="flow-context" vtype="string">
			<ui>
				<name>Forbidden Status</name>
				<description>
         Forbidden Status
				</description>
			</ui>
		</var>   

		<var name="object_id" scope="flow-context" vtype="string">
			<ui>
				<name>object_id</name>
				<description>
                    Object id.
				</description>
			</ui>
		</var>
		<var name="to_user" scope="flow-context" vtype="string">
			<ui>
				<name>To User</name>
				<description>
                    To User.
				</description>
			</ui>
		</var>
		<var name="tmp" scope="flow-context" vtype="int">
			<ui>
				<name>Temporary variable</name>
				<description>
                    Temporary variable
				</description>
			</ui>
		</var>

		<var name="tmp_object_id" scope="app-session" vtype="string">
			<ui>
				<name>Temporary object_id</name>
				<description>
                    Temporary object_id 
				</description>
			</ui>
		</var>
		<var name="tmp_object_id_instance" scope="app-session" vtype="string">
			<ui>
				<name>Temporary instance</name>
				<description>
                    Temporary instance
				</description>
			</ui>
		</var>
		<var name="temp_var1" scope="flow-context" vtype="string">
			<ui>
				<name>Temp var 1</name>
				<description>
                    Temp var 1 
				</description>
			</ui>
		</var>
		<var name="temp_var2" scope="flow-context" vtype="string">
			<ui>
				<name>Temp var 2</name>
				<description>
                    Temp var 2 
				</description>
			</ui>
		</var>
		<var name="instance_id" scope="app-session" vtype="string">
			<ui>
				<name>instance_id</name>
				<description>
                    instance_id
				</description>
			</ui>
		</var>

		<var name="file_size" scope="flow-context" vtype="int">
			<ui>
				<name>file_size</name>
				<description>
                    file_size
				</description>
			</ui>
		</var>
	</vars>

	<triggers>
		<trigger log="y" name="Login Attempt">
			<ui>
				<name>Login Attempt</name>
				<description>
                    Login Attempted
				</description>
			</ui>
			<external>
				<action name="send_event" />
			</external>
		</trigger>

		<trigger log="y" name="Login Successful">
			<external>
				<action name="send_event" />
			</external>
			<ui>
				<name>Successfully Login</name>
				<description>
                    Successful direct user login to the website.
				</description>
			</ui>
		</trigger>

		<trigger log="y" name="Edit">
			<external>
				<action name="send_event" />
			</external>
			<ui>
				<name>Edit File or Folder</name>
				<description>
                    Edit also include rename or move.
				</description>
			</ui>
		</trigger>  

		<trigger log="y" name="Upload">
			<external>
				<action name="send_event" />
			</external>
			<ui>
				<name>File started</name>
				<description>
                    File upload 
				</description>
			</ui>
		</trigger>

		<trigger log="y" name="Create">
			<external>
				<action name="send_event" />
			</external>
			<ui>
				<name>New folder</name>
				<description>
                    User created a new folder
				</description>
			</ui>
		</trigger>

		<trigger log="y" name="Invite">
			<external>
				<action name="send_event" />
			</external>
			<ui>
				<name>Invite User</name>
				<description>
                    Invite User
				</description>
			</ui>
		</trigger>

		<trigger log="y" name="Move">
			<external>
				<action name="send_event" />
			</external>
			<ui>
				<name>Move</name>
				<description>
                    Move a File or Folder 
				</description>
			</ui>
		</trigger>

		<trigger log="y" name="Delete">
			<external>
				<action name="send_event" />
			</external>
			<ui>
				<name>Delete</name>
				<description>
                    User deleted a folder/file
				</description>
			</ui>
		</trigger>
		<trigger log="y" name="Download">
			<external>
				<action name="send_event" />                
			</external>
			<ui>
				<name>Folder </name>
				<description>
                    ID of the folder downloaded
				</description>
			</ui>
		</trigger>

		<trigger log="y" name="View">
			<external>
				<action name="send_event" />
			</external>
			<ui>
				<name>View</name>
				<description>
                    Preview File
				</description>
			</ui>
		</trigger>
		<trigger log="y" name="View All">
			<external>
				<action name="send_event" />
			</external>
			<ui>
				<name>View</name>
				<description>
                    Preview File
				</description>
			</ui>
		</trigger>

		<trigger log="y" name="Share">
			<external>
				<action name="send_event" />
			</external>
			<ui>
				<name>Created and Sent A Link to a Shared File or Folder</name>
				<description>
                    Rather than sharing the file with a registered user. 
                    One can create a link and send the link to someone. 
                    The invitee in this case will be able to have direct 
                    access to the file or folder using the link.
				</description>
			</ui>
		</trigger>
		<trigger log="y" name="Login Failed">
			<external>
				<action name="send_event" />
			</external>
			<ui>
				<name>Login Failed</name>
				<description>
                    Login from a username failed.
				</description>
			</ui>
		</trigger>
		<trigger log="y" name="Logout">
			<external>
				<action name="send_event" />
			</external>
			<ui>
				<name>Logout</name>
				<description>
                    User Logout
				</description>
			</ui>
		</trigger>
		<trigger log="y" name="Post">
			<external>
				<action name="send_event" />
			</external>
			<ui>
				<name>Post comment on File</name>
				<description>
                    Post comment on File
				</description>
			</ui>
		</trigger>
		 <trigger log="y" name="Follow">
            <ui>
                <name>Follow</name>
                <description>
                    Follow
                </description>
            </ui>
            <external>
                <action name="nspolicy_lookup"/>
                <action name="send_event"/>
            </external>
        </trigger>

		<trigger log="y" name="Dummy">
			<ui>
				<name>Dummy</name>
				<description>
                    Dummy
				</description>
			</ui>
		</trigger>
		
		<trigger log="y" name="Join">
			<ui>
				<name>Join</name>
				<description>
                    Join
				</description>
			</ui>
		</trigger>

	</triggers>

	<resource name="Login" path="/">
		<id>
			<and>				
				<match field="uriparam-key" key="no_sso" mtype="kvp" rhs="no_sso" />
				<match field="postdata-key" key="redir" mtype="kvp" rhs="redir" />
				<match field="postdata-key" key="signin" mtype="kvp" rhs="1" />
				<match field="postdata-key" key="email" mtype="kvp" rhs="email" />
			</and>
		</id>
		<init>
			<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />	
		</init>	
		<request>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="postdata-key" key="email" mtype="kvp" rhs="email" />
				</and>
				<assign field="postdata-key" key="email" lhs="from_user" order="1" type="key-value" />
				<assign lhs="object_type" order="3" rhs="User" type="value" />
				<assign lhs="object" order="3" rhs="from_user" type="variable" />
				<assign lhs="tmp" order="4" rhs="100" type="value" />				
				<trigger name="Login Attempt" order="6">
					<external>
						<action name="nspolicy_lookup"/>
					</external>
					<var name="from_user" />  
					<var name="instance_id" />  
					<var name="object_type" />                      
					<var name="object" /> 
				</trigger>
			</actions>
		</request>
		<response>
			<actions>
				<and>
					<match field="status" key="http_statuscode" mtype="nsdef" rhs="found" />
					<match lhsvar="tmp" mtype="eq" rhs="100" />
				</and>
				<assign lhs="object_type" order="1" rhs="User" type="value" />
				<assign lhs="object" order="2" rhs="from_user" type="variable" />
				<assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" />
				<trigger endprocessing="y" name="Dummy" order="4">
					<var name="from_user" />
					<var name="tmp_object_id" />
					<dict action="update" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger>
				<trigger name="Login Successful" order="8">
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object" />
					<var name="from_user" />
					<var name="instance_id" />  
					<var name="object_type" />
				</trigger>
			</actions>
			<actions>
				<and>
					<match field="status" key="http_statuscode" mtype="nsdef" rhs="ok" />
					<match lhsvar="tmp" mtype="eq" rhs="100" />
				</and>
				<assign lhs="object_type" order="1" rhs="User" type="value" />
				<assign lhs="object" order="2" rhs="from_user" type="variable" />
				<trigger name="Login Failed" order="4">
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object" />
					<var name="from_user" />
					<var name="instance_id" />  
					<var name="object_type" />
				</trigger>
			</actions>
		</response>
	</resource>

	<resource name="Logout" path="/signout/.+">		
		<request>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="get" />
					<match field="uriparam-key" key="crumb" mtype="kvp" rhs="crumb" />
				</and>
				<assign lhs="object_type" order="1" rhs="User" type="value" />
				<assign lhs="tmp_object_id" order="2" rhs="from_user" type="value" />
				<trigger name="Dummy" order="3">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 
				<assign lhs="object" order="4" rhs="from_user" type="variable" />
				<trigger name="Logout" order="6"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object" />
					<var name="object_type" />					
					<var name="from_user" />
				</trigger>
			</actions>
		</request>

	</resource>

	<resource name="Create_Team" path="/api/enterprise\.teams\.create">
		<id>
			<and>
				<match mtype="exact-depth" field="uripath" depth="2"/>	
				<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
			</and>
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="reset-var" /> 
			<assign lhs="object_id" order="2" rhs=" " type="reset-var" /> 
		</init>
		<request>
			<info>
				<field encodingtype="MIME" name="post-data" parsertype="mimestream" />
			</info>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />				
			</actions>
			<!-- <actions>
				<and>
					<match field="post-data" key="name" mtype="mime-kvp" rhs="token" />					
				</and>
				<assign field="post-data" lhs="tmp_object_id" order="1" type="mime-get-value" />				
			</actions> -->
			<actions>
				<and>
					<match field="post-data" key="name" mtype="mime-kvp" rhs="name" />					
				</and>
				<assign field="post-data" key="name" lhs="object" order="1" type="mime-get-value" />				
			</actions>			
			<actions>
				<match field="post-data" mtype="mime-parsing-done" />
				<assign lhs="object_type" order="2" rhs="Team" type="value" />
				<assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" />
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 
				<trigger name="Create" order="5" block-template="slack_upload.block" > 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object" />					
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>

	<resource name="User_Enable" path="/api/enterprise.users.admin.setStatus">
		<id>
			<match mtype="exact-depth" field="uripath" depth="2"/>
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="reset-var" /> 
			<assign lhs="object_id" order="2" rhs=" " type="reset-var" /> 
		</init>
		<request>
			<info>
				<field encodingtype="MIME" name="post-data" parsertype="mimestream" />
			</info>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
			</actions>
			<!-- <actions>
				<and>
					<match field="post-data" key="name" mtype="mime-kvp" rhs="token" />					
				</and>
				<assign field="post-data" lhs="tmp_object_id" order="1" type="mime-get-value" />				
			</actions> -->
			<actions>
				<and>
					<match field="post-data" key="name" mtype="mime-kvp" rhs="user" />					
				</and>
				<assign field="post-data" key="name" lhs="object_id" order="1" type="mime-get-value" />				
			</actions>
			<actions>
				<match field="post-data" mtype="mime-parsing-done" />
				<assign lhs="object_type" order="2" rhs="User" type="value" />
				<assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" />
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 
				<trigger name="Edit" order="5" block-template="slack_upload.block" > 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object" />	
					<var name="object_id" />
					<dict action="lookup" key="object_id" val="object" />					
					<var name="object_type" />
					<var name="instance_id" />
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>

	<resource name="Remove_User" path="/api/enterprise\.users\.admin\.removeUser">
		<id>
			<match mtype="exact-depth" field="uripath" depth="2"/>
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="reset-var" /> 
			<assign lhs="object_id" order="2" rhs=" " type="reset-var" /> 
		</init>
		<request>
			<info>
				<field encodingtype="MIME" name="post-data" parsertype="mimestream" />
			</info>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
			</actions>
			<!-- <actions>
				<and>
					<match field="post-data" key="name" mtype="mime-kvp" rhs="token" />					
				</and>
				<assign field="post-data" lhs="tmp_object_id" order="1" type="mime-get-value" />				
			</actions> -->
			<actions>
				<and>
					<match field="post-data" key="name" mtype="mime-kvp" rhs="user_ids" />				
				</and>
				<assign field="post-data" key="name" lhs="object_id" order="1" type="mime-get-value" />			
			</actions>
			<actions>
				<match field="post-data" mtype="mime-parsing-done" />
				<assign lhs="object_type" order="2" rhs="User" type="value" />
				<assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" />
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 
				<trigger name="Edit" order="5" block-template="slack_upload.block" > 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object" />	
					<var name="object_id" />
					<dict action="lookup" key="object_id" val="object" />					
					<var name="object_type" />
					<var name="instance_id" />
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>

	<resource name="Add_User" path="/api/enterprise\.users\.admin\.addUser">
		<id>
			<match mtype="exact-depth" field="uripath" depth="2"/>
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="reset-var" /> 
			<assign lhs="object_id" order="2" rhs=" " type="reset-var" /> 
		</init>
		<request>
			<info>
				<field encodingtype="MIME" name="post-data" parsertype="mimestream" />
			</info>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
			</actions>
			<!-- <actions>
				<and>
					<match field="post-data" key="name" mtype="mime-kvp" rhs="token" />					
				</and>
				<assign field="post-data" lhs="tmp_object_id" order="1" type="mime-get-value" />				
			</actions> -->
			<actions>
				<and>
					<match field="post-data" key="name" mtype="mime-kvp" rhs="user_ids" />					
				</and>
				<assign field="post-data" key="name" lhs="object_id" order="1" type="mime-get-value" />				
			</actions>
			<actions>
				<match field="post-data" mtype="mime-parsing-done" />
				<assign lhs="object_type" order="2" rhs="User" type="value" />
				<assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" />
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 
				<trigger name="Create" order="5" block-template="slack_upload.block" > 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object" />	
					<var name="object_id" />
					<dict action="lookup" key="object_id" val="object" />					
					<var name="object_type" />
					<var name="instance_id" />
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>

	<resource name="Edit_Profile" path="/api/enterprise\.users\.profile\.set">
		<id>
			<match mtype="exact-depth" field="uripath" depth="2"/>
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="reset-var" /> 
			<assign lhs="object_id" order="2" rhs=" " type="reset-var" /> 
		</init>
		<request>
			<info>
				<field encodingtype="MIME" name="post-data" parsertype="mimestream" />
			</info>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
			</actions>
			<!-- <actions>
				<and>
					<match field="post-data" key="name" mtype="mime-kvp" rhs="token" />					
				</and>
				<assign field="post-data" lhs="tmp_object_id" order="1" type="mime-get-value" />				
			</actions> -->
			<actions>
				<and>
					<match field="post-data" key="name" mtype="mime-kvp" rhs="profile" />					
				</and>
				<assign field="post-data" key="name" lhs="object" order="1" type="mime-get-value" />			
			</actions>
			<actions>
				<match field="post-data" mtype="mime-parsing-done" />
				<assign lhs="object_type" order="2" rhs="User" type="value" />
				<assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" />
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 
				<trigger name="Create" order="5" block-template="slack_upload.block" > 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object" />	
					<var name="object_id" />
					<dict action="lookup" key="object_id" val="object" />					
					<var name="object_type" />
					<var name="instance_id" />
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>
	<resource name="Edit_User_Permissions" path="/api/enterprise\.users\.admin\.setAdmin">
		<id>
			<match mtype="exact-depth" field="uripath" depth="2"/>
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="reset-var" /> 
			<assign lhs="object_id" order="2" rhs=" " type="reset-var" /> 
		</init>
		<request>
			<info>
				<field encodingtype="MIME" name="post-data" parsertype="mimestream" />
			</info>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
			</actions>
			<!-- <actions>
				<and>
					<match field="post-data" key="name" mtype="mime-kvp" rhs="token" />					
				</and>
				<assign field="post-data" lhs="tmp_object_id" order="1" type="mime-get-value" />				
			</actions> -->
			<actions>
				<and>
					<match field="post-data" key="name" mtype="mime-kvp" rhs="user" />					
				</and>
				<assign field="post-data" key="name" lhs="object_id" order="1" type="mime-get-value" />			
			</actions>
			<actions>
				<match field="post-data" mtype="mime-parsing-done" />
				<assign lhs="object_type" order="2" rhs="User" type="value" />
				<assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" />
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 
				<trigger name="Edit" order="5" block-template="slack_upload.block" > 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object" />	
					<var name="object_id" />
					<dict action="lookup" key="object_id" val="object" />					
					<var name="object_type" />
					<var name="instance_id" />
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>

	<resource name="Edit_User_Permissions_owner" path="/api/enterprise.users.admin.setOwner">
		<id>
			<match mtype="exact-depth" field="uripath" depth="2"/>
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="reset-var" /> 
			<assign lhs="object_id" order="2" rhs=" " type="reset-var" /> 
		</init>
		<request>
			<info>
				<field encodingtype="MIME" name="post-data" parsertype="mimestream" />
			</info>
			<!-- <actions>
				<and>
					<match field="post-data" key="name" mtype="mime-kvp" rhs="token" />					
				</and>
				<assign field="post-data" lhs="tmp_object_id" order="1" type="mime-get-value" />				
			</actions> -->
			<actions>
				<and>
					<match field="post-data" key="name" mtype="mime-kvp" rhs="user" />				
				</and>
				<assign field="post-data" key="name" lhs="object_id" order="1" type="mime-get-value" />				
			</actions>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
			</actions>
			<actions>
				<match field="post-data" mtype="mime-parsing-done" />
				<assign lhs="object_type" order="2" rhs="User" type="value" />
				<assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" />
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 
				<trigger name="Edit" order="5" block-template="slack_upload.block" > 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object" />	
					<var name="object_id" />
					<dict action="lookup" key="object_id" val="object" />					
					<var name="object_type" />
					<var name="instance_id" />
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>

	<resource name="Login_normalslack" path="/">
		<id>
			<and>
				<!-- <match field="uriparam-key" key="no_sso" mtype="not-exists" /> -->
				<match field="postdata-key" key="redir" mtype="kvp" rhs="redir" />
				<match field="postdata-key" key="signin" mtype="kvp" rhs="signin" />
				<match field="postdata-key" key="email" mtype="kvp" rhs="email" />
				<match field="postdata-key" key="remember" mtype="kvp" rhs="remember" />
			</and>
		</id>
		<init>
			<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
		</init>
		<request>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="postdata-key" key="email" mtype="kvp" rhs="email" />
				</and>
				<assign field="postdata-key" key="email" lhs="from_user" order="1" type="key-value" />
				<assign lhs="object_type" order="3" rhs="User" type="value" />
				<assign lhs="object" order="3" rhs="from_user" type="variable" />
				<assign lhs="tmp" order="4" rhs="100" type="value" />				
				<trigger name="Login Attempt" order="6">
					<external>
						<action name="nspolicy_lookup"/>
					</external>
					<var name="from_user" />  
					<var name="instance_id" />  
					<var name="object_type" />                      
					<var name="object" /> 
				</trigger>
			</actions>
		</request>

		<response>
			<actions>
				<and>
					<match field="status" key="http_statuscode" mtype="nsdef" rhs="found" />
					<match lhsvar="tmp" mtype="eq" rhs="100" />
				</and>
				<assign lhs="object_type" order="1" rhs="User" type="value" />
				<assign lhs="object" order="2" rhs="from_user" type="variable" />
				<assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" />
				<trigger endprocessing="y" name="Dummy" order="4">
					<var name="from_user" />
					<var name="tmp_object_id" />
					<dict action="update" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger>				
				<trigger name="Login Successful" order="8">
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object" />
					<var name="from_user" />
					<var name="instance_id" />  
					<var name="object_type" />
				</trigger>
			</actions>

			<actions>
				<and>
					<match field="status" key="http_statuscode" mtype="nsdef" rhs="ok" />
					<match lhsvar="tmp" mtype="eq" rhs="100" />
				</and>
				<assign lhs="object_type" order="1" rhs="User" type="value" />
				<assign lhs="object" order="2" rhs="from_user" type="variable" />			
				<trigger name="Login Failed" order="4">
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object" />
					<var name="from_user" />
					<var name="instance_id" />  
					<var name="object_type" />
				</trigger>
			</actions>
		</response>
	</resource>

	<!-- <resource name="Logout_enterprise" path="/signout/.+">
		<init>
			<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
		</init>
		<request>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="get" />
					<match field="uriparam-key" key="crumb" mtype="kvp" rhs="crumb" />
				</and>
				<assign lhs="object_type" order="1" rhs="User" type="value" />
				<assign lhs="tmp_object_id" order="2" rhs="from_user" type="value" />
				<trigger name="Dummy" order="3">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 
				<assign lhs="object" order="4" rhs="from_user" type="variable" />				
				<trigger name="Logout" order="6"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>

	</resource>
 -->
	<!-- IOS native app signin and logout coverage -->	

	<resource name="IOS_Instance" path="/api/auth\.findTeam">
		<request>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="postdata-key" key="domain" mtype="kvp" rhs="domain" />
				</and>
				<assign field="postdata-key" key="domain" lhs="instance_id" order="1" type="key-value" />
				<assign lhs="instance_id" norm-delim="." norm-token="norm-lhs" normalize="tokens-normalize" order="2" rhs="instance_id" type="variable"/>
				<assign lhs="tmp_object_id_instance" order="3" rhs="instance_id" type="value" />
				<trigger name="Dummy" order="4">
					<var name="tmp_object_id_instance" />  
					<var name="instance_id" />  
					<dict action="update" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger> 
			</actions>
		</request>
	</resource>

	<resource name="IOS_from_user_Instance" path="/api/auth\.findUser">
		<request>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="postdata-key" key="email" mtype="kvp" rhs="email" />
				</and>
				<assign field="postdata-key" key="email" lhs="from_user" order="1" type="key-value" />
				<assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" />
				<trigger name="Dummy" order="4">
					<var name="tmp_object_id" />  
					<var name="from_user" />  
					<dict action="update" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 
			</actions>
		</request>
	</resource>

	<resource name="IOS-Login" path="/api/auth\.signin">
		<request>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="postdata-key" key="password" mtype="kvp" rhs="password" />
				</and>
				<assign lhs="object_type" order="1" rhs="User" type="value" />
				<assign lhs="object" order="2" rhs="from_user" type="variable" />
				<assign lhs="tmp" order="3" rhs="100" type="value" />

				<trigger name="Dummy" order="7">
					<var name="tmp_object_id_instance" />  
					<var name="instance_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<assign lhs="tmp_object_id" order="8" rhs="from_user" type="value" />
				<trigger name="Dummy" order="9">
					<var name="tmp_object_id" />  
					<var name="from_user" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger>  				
				<trigger name="Login Attempt" order="10">
					<external>
						<action name="nspolicy_lookup" />
					</external>
					<var name="from_user" />  
					<var name="instance_id" />  
					<var name="object_type" />                      
					<var name="object" /> 
				</trigger>
			</actions>
		</request>
		<response>
			<info>
				<field encodingtype="JSON" name="resp-body" parsertype="jsonstream" />
			</info>
			<actions>
				<and>
					<match field="status" key="http_statuscode" mtype="nsdef" rhs="ok" />
					<match field="resp-body" mtype="struct-search-keys" searchkeys="{error}" />
					<match lhsvar="tmp" mtype="eq" rhs="100" />
				</and>
				<assign lhs="tmp" rhs="0" type="value" order="1" />
				<assign lhs="object_type" order="2" rhs="User" type="value" />
				<assign lhs="object" order="3" rhs="from_user" type="variable" />
				<trigger name="Login Failed" order="8">
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object" />
					<var name="from_user" />
					<var name="instance_id" />  
					<var name="object_type" />
				</trigger>
			</actions>
			<actions>
				<and>
					<match field="status" key="http_statuscode" mtype="nsdef" rhs="ok" />
					<match field="resp-body" mtype="struct-search-keys" searchkeys="{user}" />
					<match lhsvar="tmp" mtype="eq" rhs="100" />
				</and>
				<assign lhs="tmp" rhs="0" type="value" order="1" />
				<assign lhs="object_type" order="2" rhs="User" type="value" />
				<assign lhs="object" order="3" rhs="from_user" type="variable" />
				<trigger name="Login Successful" order="9">
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object" />
					<var name="from_user" />
					<var name="instance_id" />  
					<var name="object_type" />
				</trigger>
			</actions>
		</response>
	</resource>

	<resource name="IOS_Logout" path="/api/auth\.signout">
		<request>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="postdata-key" key="set_active" mtype="kvp" rhs="set_active" />
				</and>
				<assign lhs="object_type" order="1" rhs="User" type="value" />
				<assign lhs="tmp_object_id" order="2" rhs="from_user" type="value" />
				<trigger name="Dummy" order="3">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 
				<assign lhs="object" order="4" rhs="from_user" type="variable" />
				<assign field="host" lhs="instance_id" normalize="box-instance" order="5" type="field" />

				<trigger endprocessing="y" name="Dummy" order="7">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger> 
				<trigger name="Logout" order="8"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>

	<!-- <resource name="Upload_File_from_other_App" path="/api/files\.uploadExternal"> 
		<init>
			<assign lhs="object" order="1" rhs=" " type="value" /> 
			<assign lhs="object_id" order="2" rhs=" " type="value" /> 
		</init>
		<request>
			<info>
				<field encodingtype="MIME" name="post-data" parsertype="mimestream" />
			</info>
			<actions>
				<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
				<assign field="content_len" lhs="file_size" type="field" order="1" />
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="post-data" key="name" mtype="mime-kvp" rhs="filename" />
				</and>
				<assign field="post-data" lhs="object" normalize="uri-decode" order="1" type="mime-get-value" />
				<assign lhs="object_type" order="2" rhs="File" type="value" />                
				<assign lhs="tmp_object_id" order="4" rhs="from_user" type="value" />
				<trigger name="Dummy" order="5">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 

				<trigger name="Dummy" order="7">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="Upload" order="8" >
					<external>
						<action name="inspect_req" />
						<action name="send_event" />
					</external>
					<var name="object_type" />
					<var name="object" />                    
					<var name="instance_id" />  
					<var name="from_user" />
					<var name="file_size" />
					<var name="object" />
				</trigger> 
			</actions>
		</request>
	</resource>
 -->
	<resource name="Upload_File" path="/api/files\.uploadAsync"> 
		<init>
			<assign lhs="object" order="1" rhs=" " type="value" /> 
			<assign lhs="object_id" order="2" rhs=" " type="value" /> 
		</init>
		<request>
			<actions>
				<assign field="origin" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="instance_id" norm-delim="/" norm-token="norm-rhs" normalize="str-tokenize-rev" order="2" rhs="instance_id" type="variable" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="3" />
			</actions>
			<info>
				<field encodingtype="MIME" name="post-data" parsertype="mimestream" />
			</info>
			<actions>
				<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
				<assign field="content_len" lhs="file_size" type="field" order="1" />
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="post-data" key="filename" mtype="mime-kvp" rhs="filename" />
				</and>
				<assign field="post-data" lhs="object" normalize="uri-decode" order="1" type="mime-get-value" />
				<assign lhs="object_type" order="2" rhs="File" type="value" />
				<assign lhs="tmp" order="3" rhs="101" type="value" />
				<assign lhs="tmp_object_id" order="4" rhs="from_user" type="value" />
				<trigger name="Dummy" order="5">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 

				<trigger endprocessing="y" name="Dummy" order="7">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger encryption="y" name="Upload" order="8" suppress="true"  >
					<external>
						<action name="inspect_req" />
					</external>
					<var name="object_type" />
					<var name="object" />
					<var name="object_id" />
					<var name="instance_id" />  
					<var name="from_user" />
					<var name="file_size" />
					<var name="object" suppression_key="true" />
				</trigger> 
			</actions>

			<!-- text snippet -->

			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="post-data" key="name" mtype="mime-kvp" rhs="filetype" />
					<match field="post-data" key="name" mtype="mime-kvp" rhs="title" />
				</and>
				<assign field="post-data" lhs="object" order="1" type="mime-get-value" />
				<assign lhs="object_type" order="2" rhs="File" type="value" />
				<assign lhs="tmp" order="3" rhs="101" type="value" />
				<assign lhs="tmp_object_id" order="4" rhs="from_user" type="value" />
				<trigger name="Dummy" order="5">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 

				<trigger endprocessing="y" name="Dummy" order="7">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="Upload" order="8" >
					<external>
						<action name="inspect_req" />
					</external>
					<var name="object_type" />
					<var name="object" />
					<var name="object_id" />
					<var name="instance_id" />  
					<var name="from_user" />
					<var name="file_size" />
				</trigger> 
			</actions>
		</request>

		<response>
			<info>
				<field encodingtype="JSON" name="resp-body" parsertype="jsonstream" />
			</info>
			<actions>
				<and>
					<match lhsvar="tmp" mtype="eq" rhs="101" />
					<match field="resp-body" mtype="struct-search-keys" searchkeys="{file}" />
					<match field="status" key="http_statuscode" mtype="nsdef" rhs="ok" />
				</and>
				<assign field="resp-body" lhs="object_id" order="1" searchkeys="{file}" type="struct-get-value" />
				<assign lhs="tmp" order="2" rhs="0" type="value" />
				<assign lhs="object_type" order="3" rhs="File" type="value" />
				<assign lhs="tmp_object_id" order="4" rhs="from_user" type="value" />
				<trigger name="Dummy" order="5">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger>

				<trigger endprocessing="y" name="Dummy" order="7">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="Upload" order="8"> 
					<external>
						<action name="send_event" />
					</external>
					<var name="object" />
					<var name="object_id" />
					<dict action="update" key="object_id" val="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
					<var name="file_size" />
				</trigger>
				<assign lhs="object" order="9" rhs=" " type="value" /> 
			</actions>
		</response>
	</resource>

	<resource name="create_channel" path="/api/channels\.join">
		<id>
			<match field="content-type" mtype="match_notpresent" keymtype="strstr" rhs="multipart/form-data"/> 
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="reset-var" /> 
			<assign lhs="object_id" order="2" rhs=" " type="reset-var" /> 
		</init>
		<request>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="postdata-key" key="name" mtype="kvp" rhs="name" />
				</and>
				<assign field="postdata-key" key="name" lhs="object" order="1" type="key-value" />
				<assign lhs="object_type" order="2" rhs="Channel" type="value" />
				<assign lhs="tmp" order="3" rhs="102" type="value" />
				<assign lhs="tmp_object_id" order="4" rhs="from_user" type="value" />
				<trigger name="Dummy" order="5">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 

				<trigger endprocessing="y" name="Dummy" order="7">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="Create" order="7" > 
					<external>
						<action name="nspolicy_lookup" />
					</external>
					<var name="object" />
					<var name="object_id" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>

		<response>
			<info>
				<field encodingtype="JSON" name="resp-body" parsertype="jsonstream" />
			</info>
			<actions>
				<and>
					<match lhsvar="tmp" mtype="eq" rhs="102" />
					<match field="resp-body" mtype="struct-search-keys" searchkeys="{channel{id}}" />
					<match field="status" key="http_statuscode" mtype="nsdef" rhs="ok" />
				</and>
				<assign field="resp-body" lhs="object_id" order="1" searchkeys="{channel{id}}" type="struct-get-value" />
				<assign lhs="tmp" order="2" rhs="0" type="value" />
				<assign lhs="object_type" order="3" rhs="Channel" type="value" />
				<assign lhs="tmp_object_id" order="4" rhs="from_user" type="value" />
				<trigger name="Dummy" order="5">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger>
				<!-- <assign field="host" lhs="instance_id" normalize="box-instance" order="6" type="field" /> -->
				<trigger name="Create" order="7"> 
					<external>
						<action name="send_event" />
					</external>
					<var name="object" />
					<var name="object_id" />
					<dict action="update" key="object_id" val="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</response>
	</resource>

	<resource name="create_group" path="/api/groups\.create">
		<id>
			<match field="content-type" mtype="match_notpresent" keymtype="strstr" rhs="multipart/form-data"/> 
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="reset-var" /> 
			<assign lhs="object_id" order="2" rhs=" " type="reset-var" /> 
		</init>
		<request>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="postdata-key" key="name" mtype="kvp" rhs="name" />
				</and>
				<assign field="postdata-key" key="name" lhs="object" order="1" type="key-value" />
				<assign lhs="object_type" order="2" rhs="Group" type="value" />
				<assign lhs="tmp" order="3" rhs="103" type="value" />
				<assign lhs="tmp_object_id" order="4" rhs="from_user" type="value" />
				<trigger name="Dummy" order="5">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 

				<trigger endprocessing="y" name="Dummy" order="7">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<!-- <assign field="host" lhs="instance_id" normalize="box-instance" order="6" type="field" /> -->
				<trigger name="Create" order="7" > 
					<external>
						<action name="nspolicy_lookup" />
					</external>
					<var name="object" />
					<var name="object_id" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>

		<response>
			<info>
				<field encodingtype="JSON" name="resp-body" parsertype="jsonstream" />
			</info>
			<actions>
				<and>
					<match lhsvar="tmp" mtype="eq" rhs="103" />
					<match field="resp-body" mtype="struct-search-keys" searchkeys="{group{id}}" />
					<match field="status" key="http_statuscode" mtype="nsdef" rhs="ok" />
				</and>
				<assign field="resp-body" lhs="object_id" order="1" searchkeys="{group{id}}" type="struct-get-value" />
				<assign lhs="tmp" order="2" rhs="0" type="value" />
				<assign lhs="object_type" order="3" rhs="Group" type="value" />
				<assign lhs="tmp_object_id" order="4" rhs="from_user" type="value" />
				<trigger name="Dummy" order="5">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger>
				<!-- <assign field="host" lhs="instance_id" normalize="box-instance" order="6" type="field" /> -->
				<trigger name="Create" order="7"> 
					<external>
						<action name="send_event" />
					</external>
					<var name="object" />
					<var name="object_id" />
					<dict action="update" key="object_id" val="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</response>
	</resource>

	<resource name="delete_group" path="/api/groups\.close">
		<init>
			<assign lhs="object" order="1" rhs=" " type="value" /> 
			<assign lhs="object_id" order="2" rhs=" " type="value" /> 
		</init>
		<request>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="postdata-key" key="channel" mtype="kvp" rhs="channel" />
				</and>
				<assign field="postdata-key" key="channel" lhs="object_id" order="1" type="key-value" />
				<assign lhs="object_type" order="2" rhs="Group" type="value" />
				<assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" />
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 

				<trigger endprocessing="y" name="Dummy" order="7">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<!--  <assign field="host" lhs="instance_id" normalize="box-instance" order="5" type="field" /> -->
				<trigger name="Delete" order="6"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object_id" />
					<dict action="lookup" key="object_id" val="object" />
					<var name="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>

	<resource name="edit_group" path="/api/groups\.rename">
		<id>
			<match field="content-type" mtype="match_notpresent" keymtype="strstr" rhs="multipart/form-data"/> 
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="value" /> 
			<assign lhs="object_id" order="2" rhs=" " type="value" /> 
		</init>
		<request>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="postdata-key" key="name" mtype="kvp" rhs="name" />
				</and>
				<assign field="postdata-key" key="name" lhs="object" order="1" type="key-value" />
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="postdata-key" key="channel" mtype="kvp" rhs="channel" />
				</and>
				<assign field="postdata-key" key="channel" lhs="object_id" order="1" type="key-value" />
				<assign lhs="object_type" order="2" rhs="Group" type="value" />
				<assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" />
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 

				<trigger endprocessing="y" name="Dummy" order="7">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<!-- <assign field="host" lhs="instance_id" normalize="box-instance" order="5" type="field" /> -->
				<trigger name="Edit" order="8"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object_id" />
					<var name="object" />
					<dict action="update" key="object_id" val="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>

	</resource>

	<resource name="edit_channel" path="/api/channels\.rename">
		<id>
			<match field="content-type" mtype="match_notpresent" keymtype="strstr" rhs="multipart/form-data"/> 
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="value" /> 
			<assign lhs="object_id" order="2" rhs=" " type="value" /> 
		</init>
		<request>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="postdata-key" key="name" mtype="kvp" rhs="name" />
				</and>
				<assign field="postdata-key" key="name" lhs="object" order="1" type="key-value" />
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="postdata-key" key="channel" mtype="kvp" rhs="channel" />
				</and>
				<assign field="postdata-key" key="channel" lhs="object_id" order="1" type="key-value" />
				<assign lhs="object_type" order="2" rhs="Channel" type="value" />
				<assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" />
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 

				<trigger endprocessing="y" name="Dummy" order="7">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<!-- <assign field="host" lhs="instance_id" normalize="box-instance" order="5" type="field" /> -->
				<trigger name="Edit" order="7"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object_id" />
					<var name="object" />
					<dict action="update" key="object_id" val="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>



	<resource name="archive_channel" path="/api/channels\.archive">
		<id>
			<match field="content-type" mtype="match_notpresent" keymtype="strstr" rhs="multipart/form-data"/> 
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="value" /> 
			<assign lhs="object_id" order="2" rhs=" " type="value" /> 
		</init>
		<request>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="postdata-key" key="channel" mtype="kvp" rhs="channel" />
				</and>
				<assign field="postdata-key" key="channel" lhs="object_id" order="1" type="key-value" />
				<assign lhs="object_type" order="2" rhs="Channel" type="value" />
				<assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" />
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 

				<trigger endprocessing="y" name="Dummy" order="7">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<!-- <assign field="host" lhs="instance_id" normalize="box-instance" order="5" type="field" /> -->
				<trigger name="Delete" order="8"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object_id" />
					<dict action="lookup" key="object_id" val="object" />
					<var name="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>



	<resource name="archive_group" path="/api/groups\.archive">
		<id>
			<match field="content-type" mtype="match_notpresent" keymtype="strstr" rhs="multipart/form-data"/> 
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="value" /> 
			<assign lhs="object_id" order="2" rhs=" " type="value" /> 
		</init>
		<request>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="postdata-key" key="channel" mtype="kvp" rhs="channel" />
				</and>
				<assign field="postdata-key" key="channel" lhs="object_id" order="1" type="key-value" />
				<assign lhs="object_type" order="2" rhs="Group" type="value" />
				<assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" />
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 

				<trigger endprocessing="y" name="Dummy" order="7">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<!-- <assign field="host" lhs="instance_id" normalize="box-instance" order="5" type="field" /> -->
				<trigger name="Delete" order="8"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object_id" />
					<dict action="lookup" key="object_id" val="object" />
					<var name="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>


	<resource name="Covert_to_group" path="/api/channels\.convertToGroup">
		<id>
			<match field="content-type" mtype="match_notpresent" keymtype="strstr" rhs="multipart/form-data"/> 
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="value" /> 
			<assign lhs="object_id" order="2" rhs=" " type="value" /> 
		</init>
		<request>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="postdata-key" key="channel" mtype="kvp" rhs="channel" />
				</and>
				<assign field="postdata-key" key="channel" lhs="object_id" order="1" type="key-value" />
				<assign lhs="object_type" order="2" rhs="Channel" type="value" />
				<assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" />
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 

				<trigger endprocessing="y" name="Dummy" order="7">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<!-- <assign field="host" lhs="instance_id" normalize="box-instance" order="5" type="field" /> -->
				<trigger name="Edit" order="8"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object_id" />
					<dict action="lookup" key="object_id" val="object" />
					<var name="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>


	<resource name="view_archives_actions" path="/archives">
		<init>
			<assign lhs="object" order="1" rhs=" " type="value" /> 
			<assign lhs="object_id" order="2" rhs=" " type="value" /> 
		</init>
		<request>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<!-- covert to group-->
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="postdata-key" key="do_convert" mtype="kvp" rhs="1" />
					<match field="postdata-key" key="channel_id" mtype="kvp" rhs="channel_id" />
				</and>
				<assign field="postdata-key" key="channel_id" lhs="object_id" order="1" type="key-value" />
				<assign lhs="object_type" order="2" rhs="Channel" type="value" />
				<assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" />
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 

				<trigger endprocessing="y" name="Dummy" order="7">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<!-- <assign field="host" lhs="instance_id" normalize="box-instance" order="5" type="field" /> -->
				<trigger name="Edit" order="8"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object_id" />
					<dict action="lookup" key="object_id" val="object" />
					<var name="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
			<!-- archive channel -->
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="postdata-key" key="do_archive" mtype="kvp" rhs="1" />
					<match field="postdata-key" key="channel_id" mtype="kvp" rhs="channel_id" />
				</and>
				<assign field="postdata-key" key="channel_id" lhs="object_id" order="1" type="key-value" />
				<assign lhs="object_type" order="2" rhs="Channel" type="value" />
				<assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" />
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 

				<trigger endprocessing="y" name="Dummy" order="7">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<!-- <assign field="host" lhs="instance_id" normalize="box-instance" order="5" type="field" /> -->
				<trigger name="Delete" order="8"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object_id" />
					<dict action="lookup" key="object_id" val="object" />
					<var name="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
			<!-- unarchive channel -->
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="postdata-key" key="do_unarchive" mtype="kvp" rhs="1" />
					<match field="postdata-key" key="channel_id" mtype="kvp" rhs="channel_id" />
				</and>
				<assign field="postdata-key" key="channel_id" lhs="object_id" order="1" type="key-value" />
				<assign lhs="object_type" order="2" rhs="Channel" type="value" />
				<assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" />
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 

				<trigger endprocessing="y" name="Dummy" order="7">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<!-- <assign field="host" lhs="instance_id" normalize="box-instance" order="5" type="field" /> -->
				<trigger name="Create" order="8"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object_id" />
					<dict action="lookup" key="object_id" val="object" />
					<var name="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
			<!-- delete channel -->
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="postdata-key" key="do_delete" mtype="kvp" rhs="1" />
					<match field="postdata-key" key="channel_id" mtype="kvp" rhs="channel_id" />
				</and>
				<assign field="postdata-key" key="channel_id" lhs="object_id" order="1" type="key-value" />
				<assign lhs="object_type" order="2" rhs="Channel" type="value" />
				<assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" />
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 

				<trigger endprocessing="y" name="Dummy" order="7">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<!-- <assign field="host" lhs="instance_id" normalize="box-instance" order="5" type="field" /> -->
				<trigger name="Delete" order="8"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object_id" />
					<dict action="lookup" key="object_id" val="object" />
					<var name="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>

	<resource name="account_settings" path="/account/settings">
		<init>
			<assign lhs="object" order="1" rhs=" " type="value" /> 
			<assign lhs="object_id" order="2" rhs=" " type="value" /> 
		</init>
		<request>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<!-- change username-->
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="postdata-key" key="change_username" mtype="kvp" rhs="1" />
					<match field="postdata-key" key="username" mtype="kvp" rhs="username" />
				</and>
				<assign field="postdata-key" key="username" lhs="object" order="1" type="key-value" />
				<assign lhs="object_type" order="2" rhs="Settings" type="value" />
				<assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" />
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 

				<trigger endprocessing="y" name="Dummy" order="7">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<!-- <assign field="host" lhs="instance_id" normalize="box-instance" order="5" type="field" /> -->
				<trigger name="Edit" order="8"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
			<!-- change password-->
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="postdata-key" key="change_password" mtype="kvp" rhs="1" />
					<match field="postdata-key" key="password" mtype="kvp" rhs="password" />
				</and>
				<assign field="postdata-key" key="password" lhs="object" order="1" type="key-value" />
				<assign lhs="object_type" order="2" rhs="Settings" type="value" />
				<assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" />
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 

				<trigger endprocessing="y" name="Dummy" order="7">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<!-- <assign field="host" lhs="instance_id" normalize="box-instance" order="5" type="field" /> -->
				<trigger name="Edit" order="8"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
			<!-- unarchive channel -->
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="postdata-key" key="do_unarchive" mtype="kvp" rhs="1" />
					<match field="postdata-key" key="channel_id" mtype="kvp" rhs="channel_id" />
				</and>
				<assign field="postdata-key" key="channel_id" lhs="object_id" order="1" type="key-value" />
				<assign lhs="object_type" order="2" rhs="Channel" type="value" />
				<assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" />
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 

				<trigger endprocessing="y" name="Dummy" order="7">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<!--  <assign field="host" lhs="instance_id" normalize="box-instance" order="5" type="field" /> -->
				<trigger name="Create" order="8"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object_id" />
					<dict action="lookup" key="object_id" val="object" />
					<var name="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
			<!-- enable 2 fact auth-->
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="postdata-key" key="enable_two_factor" mtype="kvp" rhs="1" />
				</and>
				<assign lhs="object" order="1" rhs="enable_two_factor" type="value" />
				<assign lhs="object_type" order="2" rhs="Settings" type="value" />
				<assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" />
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 

				<trigger endprocessing="y" name="Dummy" order="7">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<!-- <assign field="host" lhs="instance_id" normalize="box-instance" order="5" type="field" /> -->
				<trigger name="Edit" order="8"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
			<!-- change email -->
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="postdata-key" key="change_email" mtype="kvp" rhs="1" />
					<match field="postdata-key" key="new_email" mtype="kvp" rhs="new_email" />
				</and>
				<assign field="postdata-key" key="new_email" lhs="object" order="1" type="key-value" />
				<assign lhs="object_type" order="2" rhs="Settings" type="value" />
				<assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" />
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 

				<trigger endprocessing="y" name="Dummy" order="7">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<!-- <assign field="host" lhs="instance_id" normalize="box-instance" order="5" type="field" /> -->
				<trigger name="Edit" order="8"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
			<!-- change time_zone-->
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="postdata-key" key="done_tz" mtype="kvp" rhs="1" />
					<match field="postdata-key" key="tz" mtype="kvp" rhs="tz" />
				</and>
				<assign field="postdata-key" key="tz" lhs="object" order="1" type="key-value" />
				<assign lhs="object_type" order="2" rhs="Settings" type="value" />
				<assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" />
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 

				<trigger endprocessing="y" name="Dummy" order="7">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<!--  <assign field="host" lhs="instance_id" normalize="box-instance" order="5" type="field" /> -->
				<trigger name="Edit" order="8"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>

	<resource name="unarchive_group" path="/api/groups\.unarchive">
		<id>
			<match field="content-type" mtype="match_notpresent" keymtype="strstr" rhs="multipart/form-data"/> 
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="value" /> 
			<assign lhs="object_id" order="2" rhs=" " type="value" /> 
		</init>
		<request>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="postdata-key" key="channel" mtype="kvp" rhs="channel" />
				</and>
				<assign field="postdata-key" key="channel" lhs="object_id" order="1" type="key-value" />
				<assign lhs="object_type" order="2" rhs="Group" type="value" />
				<assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" />
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 

				<trigger endprocessing="y" name="Dummy" order="7">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<!-- <assign field="host" lhs="instance_id" normalize="box-instance" order="5" type="field" /> -->
				<trigger name="Create" order="8"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object_id" />
					<dict action="lookup" key="object_id" val="object" />
					<var name="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>

	</resource>

	<resource name="delete_channel" path="/api/channels\.leave">
		<id>
			<match field="content-type" mtype="match_notpresent" keymtype="strstr" rhs="multipart/form-data"/> 
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="value" /> 
			<assign lhs="object_id" order="2" rhs=" " type="value" /> 
		</init>
		<request>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="postdata-key" key="channel" mtype="kvp" rhs="channel" />
				</and>
				<assign field="postdata-key" key="channel" lhs="object_id" order="1" type="key-value" />
				<assign lhs="object_type" order="2" rhs="Channel" type="value" />
				<assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" />
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 

				<trigger endprocessing="y" name="Dummy" order="7">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<!-- <assign field="host" lhs="instance_id" normalize="box-instance" order="5" type="field" /> -->
				<trigger name="Delete" order="8"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object_id" />
					<dict action="lookup" key="object_id" val="object" />
					<var name="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>

	<resource name="delete_directmessages" path="/api/im\.close">
		<init>
			<assign lhs="object" order="1" rhs=" " type="value" /> 
			<assign lhs="object_id" order="2" rhs=" " type="value" /> 
		</init>
		<request>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="postdata-key" key="channel" mtype="kvp" rhs="channel" />
				</and>
				<assign field="postdata-key" key="channel" lhs="object_id" order="1" type="key-value" />
				<assign lhs="object_type" order="2" rhs="User" type="value" />
				<assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" />
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 

				<trigger endprocessing="y" name="Dummy" order="7">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<!--  <assign field="host" lhs="instance_id" normalize="box-instance" order="5" type="field" /> -->
				<trigger name="Delete" order="8"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object_id" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>

	<resource name="setpurpose_channel" path="/api/channels\.setPurpose">
		<id>
			<match field="content-type" mtype="match_notpresent" keymtype="strstr" rhs="multipart/form-data"/> 
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="value" /> 
		</init>
		<request>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="postdata-key" key="purpose" mtype="kvp" rhs="purpose" />
				</and>
				<assign field="postdata-key" key="purpose" lhs="object" order="1" type="key-value" />
				<assign lhs="object_type" order="2" rhs="Channel" type="value" />
				<assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" />
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 

				<trigger endprocessing="y" name="Dummy" order="7">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>				
				<trigger name="Edit" order="8"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>
	
	<resource name="Channel_Creation_iOS" path="/api/channels\.create">
		<id>
			<match field="content-type" mtype="match_notpresent" keymtype="strstr" rhs="multipart/form-data"/> 
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="value" /> 
		</init>
		<request>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="postdata-key" key="name" mtype="kvp" rhs="name" />
				</and>
				<assign field="postdata-key" key="name" lhs="object" order="1" type="key-value" />
				<assign lhs="object_type" order="2" rhs="Channel" type="value" />
				<assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" />
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 

				<trigger endprocessing="y" name="Dummy" order="7">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>				
				<trigger name="Create" order="8"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>


	<resource name="setpurpose_group" path="/api/groups\.setPurpose">
		<id>
			<match field="content-type" mtype="match_notpresent" keymtype="strstr" rhs="multipart/form-data"/> 
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="value" /> 
		</init>
		<request>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="postdata-key" key="purpose" mtype="kvp" rhs="purpose" />
				</and>
				<assign field="postdata-key" key="purpose" lhs="object" order="1" type="key-value" />
				<assign lhs="object_type" order="2" rhs="Group" type="value" />
				<assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" />
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 

				<trigger endprocessing="y" name="Dummy" order="7">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<!-- <assign field="host" lhs="instance_id" normalize="box-instance" order="5" type="field" /> -->
				<trigger name="Edit" order="8"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>

	<resource name="View_File_dnlad" path="/files-pri/.+/{object}">
		<id>
			<match mtype="exact-depth" field="uripath" depth="3"/>
		</id>
		<request>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="get" />                   
				</and>
				<assign lhs="object_type" order="1" rhs="File" type="value" />
				<assign lhs="tmp" order="2" rhs="111" type="value" />				
			</actions>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
		</request>
		<response>
			<actions>
				<and>
					<match lhsvar="tmp" mtype="eq" rhs="111" />
					<match field="status" key="http_statuscode" mtype="nsdef" rhs="ok" />
				</and>					
				<assign lhs="tmp" order="1" rhs="0" type="value" />
				<assign lhs="tmp_object_id" order="2" rhs="from_user" type="value" /> 
				<trigger name="Dummy" order="3">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 
				<assign lhs="tmp_object_id_instance" order="4" rhs="instance_id" type="value" />
				<trigger name="Dummy" order="5">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="Download" order="6"> 
					<external>
						<action name="inspect_rsp" />
						<action name="send_event" />
					</external>
					<var name="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</response>
	</resource>

	<resource name="Download_file" path="/files-pri/{object_id}/download/{object}">
		<id>
			<and>
				<match field="uri" keymtype="strstr" mtype="match_notpresent" rhs="safe" />
				<match mtype="exact-depth" field="uripath" depth="4"/>
			</and>
		</id>
		<request>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="get" />
					<match field="uripath" mtype="strstr" rhs="/download" />
				</and>
				<assign lhs="object_type" order="1" rhs="File" type="value" />
				<assign lhs="tmp" order="2" rhs="111" type="value" />

			</actions>
			<!-- <actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions> -->
		</request>

		<response>
			<actions>
				<and>
					<match lhsvar="tmp" mtype="eq" rhs="111" />
					<match field="status" key="http_statuscode" mtype="nsdef" rhs="ok" />
				</and>
				<assign type="value" order="1" lhs="object" rhs=" " />
				<assign field="content-disp-key" key=" filename" lhs="object" normalize="mime-header-decode" order="2" type="key-value" />
				<assign lhs="object" norm-delim="\'" norm-token="norm-rhs" normalize="tokens-normalize" order="3" rhs="object" type="variable" />
				<assign lhs="object" normalize="slides-normalize" order="4" rhs="object" type="variable" />
				<assign lhs="object_type" order="5" rhs="File" type="value" />
				<assign lhs="tmp" order="6" rhs="0" type="value" />
				<assign lhs="tmp_object_id" order="7" rhs="from_user" type="value" /> 
				<trigger name="Dummy" order="8">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 
				<trigger endprocessing="y" name="Dummy" order="9">
					<var name="object" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" val="tmp_object_id_instance" key="object" />
				</trigger>				
				<trigger endprocessing="y" name="Dummy" order="10">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="Download" order="11" > 
					<external>
						<action name="inspect_rsp" />
						<action name="send_event" />
					</external>
					<var name="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</response>

	</resource>


	<resource name="Download_file_2" path="/files-pub/.+/download/{object}">
		<request>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="get" />
					<match field="uripath" mtype="strstr" rhs="/download" />
				</and>
				<assign lhs="object_type" order="1" rhs="File" type="value" />
				<assign lhs="tmp" order="2" rhs="115" type="value" />

			</actions>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
		</request>

		<response>
			<actions>
				<and>
					<match lhsvar="tmp" mtype="eq" rhs="115" />
				</and>
				<assign lhs="object_type" order="1" rhs="File" type="value" />
				<assign lhs="tmp" order="2" rhs="0" type="value" />
				<assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" /> 
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 

				<trigger endprocessing="y" name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="Download" order="7"> 
					<external>
						<action name="inspect_rsp" />
						<action name="send_event" />
					</external>
					<var name="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</response>

	</resource>


	<resource name="export_users" path="/admin"> 
		<id>
			<match mtype="exact-depth" field="uripath" depth="1" />
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="value" /> 
		</init>
		<request>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="get" />
					<match field="uriparam-key" key="csv" mtype="kvp" rhs="1" />
				</and>
				<assign lhs="object" order="1" rhs="Users List" type="value" />
				<assign lhs="object_type" order="2" rhs="File" type="value" />
				<assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" />
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 

				<trigger endprocessing="y" name="Dummy" order="7">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<!-- <assign field="host" lhs="instance_id" normalize="box-instance" order="5" type="field" /> -->
				<trigger name="Download" order="8"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>


	<resource name="Download_file_3" path="/files-pri-safe/.+/{object}">
		<request>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="get" /> 
				</and>
				<assign lhs="object_type" order="1" rhs="File" type="value" />
				<assign lhs="tmp" order="2" rhs="112" type="value" />

			</actions>
		</request>

		<response>
			<actions>
				<and>
					<match lhsvar="tmp" mtype="eq" rhs="112" />
					<match field="status" key="http_statuscode" mtype="nsdef" rhs="ok" />
				</and>
				<assign field="content-disp-key" key=" filename" lhs="object" normalize="mime-header-decode" order="1" type="key-value" />
				<assign lhs="object" norm-delim="\'" norm-token="norm-rhs" normalize="tokens-normalize" order="2" rhs="object" type="variable" />
				<assign lhs="object_type" order="3" rhs="File" type="value" />
				<assign lhs="tmp" order="4" rhs="0" type="value" />
				<assign lhs="tmp_object_id" order="5" rhs="from_user" type="value" /> 
				<trigger name="Dummy" order="6">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 

				<trigger name="Dummy" order="8">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="Download" order="9"> 
					<external>
						<action name="inspect_rsp" />
						<action name="send_event" />

					</external>
					<var name="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</response>

	</resource>

	<resource name="add_comment" path="/api/files\.comments\.add" enable-cibuf="Y" >
		<id>
			<and>
				<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
				<match field="content-type" mtype="match_notpresent" keymtype="strstr" rhs="multipart/form-data"/> 
			</and>
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="reset-var" /> 
			<assign lhs="object_id" order="2" rhs=" " type="reset-var" /> 
		</init>
		<request>
			<actions>
				<trigger order="1" name="Dummy">
					<external>
						<action name="hold_header_for_inspect" />
					</external>
				</trigger>
			</actions>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<!-- <actions>
				<and>
					<match field="post-data" key="name" mtype="mime-kvp" rhs="token" />					
				</and>
				<assign field="post-data" lhs="tmp_object_id" order="1" type="mime-get-value" />				
			</actions>
			 -->
			<actions>
				<and>

					<match field="postdata-key" key="comment" mtype="kvp" rhs="comment" />
				</and>				
				<assign field="postdata-key" key="comment" lhs="chat_message" order="2" type="key-value" />
				<!-- </actions>
            <actions>
				<match filed="post-data" mtype="mime-parsing-done" /> -->	
				<assign lhs="object_type" order="3" rhs="Comment" type="value" />
				<assign lhs="tmp" order="4" rhs="106" type="value" />
				<assign lhs="tmp_object_id" order="5" rhs="from_user" type="value" />
				<trigger name="Dummy" order="6">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 

				<trigger name="Dummy" order="8">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>				
				<trigger name="Post" order="9"> 
					<external>
						<action name="send_event"/>
						<action name="inspect_cibuffer"/>
						<action name="inspect_cibuffer_lookup"/>
					</external>
					<var name="object_id" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>


	<resource name="add_response" path="/api/slackbot\.responses\.add">
		<id>
			<match field="content-type" mtype="match_notpresent" keymtype="strstr" rhs="multipart/form-data"/> 
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="value" /> 
			<assign lhs="object_id" order="2" rhs=" " type="value" /> 
		</init>
		<request>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="postdata-key" key="responses" mtype="kvp" rhs="responses" />
				</and>
				<assign field="postdata-key" key="responses" lhs="object" order="1" type="key-value" />
				<assign lhs="object_type" order="2" rhs="Response" type="value" />
				<assign lhs="tmp" order="3" rhs="113" type="value" />
				<assign lhs="tmp_object_id" order="4" rhs="from_user" type="value" />
				<trigger name="Dummy" order="5">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 

				<trigger endprocessing="y" name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<!-- <assign field="host" lhs="instance_id" normalize="box-instance" order="6" type="field" /> -->
				<trigger name="Create" order="7"> 
					<external>
						<action name="nspolicy_lookup" />
					</external>
					<var name="object" />
					<var name="object_id" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>

		<response>
			<info>
				<field encodingtype="JSON" name="resp-body" parsertype="jsonstream" />
			</info>
			<actions>
				<and>
					<match lhsvar="tmp" mtype="eq" rhs="113" />
					<match field="resp-body" mtype="struct-search-keys" searchkeys="{response{id}}" />
					<match field="status" key="http_statuscode" mtype="nsdef" rhs="ok" />
				</and>
				<assign field="resp-body" lhs="object_id" order="1" searchkeys="{response{id}}" type="struct-get-value" />
				<assign lhs="tmp" order="2" rhs="0" type="value" />
				<assign lhs="object_type" order="3" rhs="Response" type="value" />
				<assign lhs="tmp_object_id" order="4" rhs="from_user" type="value" />
				<trigger name="Dummy" order="5">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger>
				<!-- <assign field="host" lhs="instance_id" normalize="box-instance" order="6" type="field" /> -->
				<trigger name="Create" order="7"> 
					<external>
						<action name="send_event" />
					</external>
					<var name="object" />
					<var name="object_id" />
					<dict action="update" key="object_id" val="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</response>
	</resource>


	<resource name="edit_response" path="/api/slackbot\.responses\.edit">
		<id>
			<match field="content-type" mtype="match_notpresent" keymtype="strstr" rhs="multipart/form-data"/> 
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="value" /> 
			<assign lhs="object_id" order="2" rhs=" " type="value" /> 
		</init>
		<request>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="postdata-key" key="responses" mtype="kvp" rhs="responses" />
				</and>
				<assign field="postdata-key" key="responses" lhs="object" order="1" type="key-value" />
				<assign lhs="object_type" order="2" rhs="Response" type="value" />
				<assign lhs="tmp" order="3" rhs="114" type="value" />
				<assign lhs="tmp_object_id" order="4" rhs="from_user" type="value" />
				<trigger name="Dummy" order="5">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 

				<trigger endprocessing="y" name="Dummy" order="7">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<!-- <assign field="host" lhs="instance_id" normalize="box-instance" order="6" type="field" /> -->
				<trigger name="Edit" order="8"> 
					<external>
						<action name="nspolicy_lookup" />
					</external>
					<var name="object" />
					<var name="object_id" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>

		<response>
			<info>
				<field encodingtype="JSON" name="resp-body" parsertype="jsonstream" />
			</info>
			<actions>
				<and>
					<match lhsvar="tmp" mtype="eq" rhs="114" />
					<match field="resp-body" mtype="struct-search-keys" searchkeys="{response{id}}" />
					<match field="status" key="http_statuscode" mtype="nsdef" rhs="ok" />
				</and>
				<assign field="resp-body" lhs="object_id" order="1" searchkeys="{response{id}}" type="struct-get-value" />
				<assign lhs="tmp" order="2" rhs="0" type="value" />
				<assign lhs="object_type" order="3" rhs="Response" type="value" />
				<assign lhs="tmp_object_id" order="4" rhs="from_user" type="value" />
				<trigger name="Dummy" order="5">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger>
				<!--  <assign field="host" lhs="instance_id" normalize="box-instance" order="6" type="field" /> -->
				<trigger name="Edit" order="7"> 
					<external>
						<action name="send_event" />
					</external>
					<var name="object" />
					<var name="object_id" />
					<dict action="update" key="object_id" val="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</response>
	</resource>

	<resource name="delete_response" path="/api/slackbot\.responses\.delete">
		<id>
			<match field="content-type" mtype="match_notpresent" keymtype="strstr" rhs="multipart/form-data"/> 
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="value" /> 
			<assign lhs="object_id" order="2" rhs=" " type="value" /> 
		</init>
		<request>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="postdata-key" key="response" mtype="kvp" rhs="response" />
				</and>
				<assign field="postdata-key" key="response" lhs="object_id" order="1" type="key-value" />
				<assign lhs="object_type" order="2" rhs="Response" type="value" />
				<assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" />
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 

				<trigger endprocessing="y" name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<!-- <assign field="host" lhs="instance_id" normalize="box-instance" order="5" type="field" /> -->
				<trigger name="Delete" order="7"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object_id" />
					<dict action="lookup" key="object_id" val="object" />
					<var name="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>




	<resource name="edit_comment" path="/api/files\.comments\.edit">
		<init>
			<assign lhs="object" order="1" rhs=" " type="value" /> 
			<assign lhs="object_id" order="2" rhs=" " type="value" /> 
		</init>
		<request>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="postdata-key" key="comment" mtype="kvp" rhs="comment" />
				</and>
				<!-- <assign field="postdata-key" key="comment" lhs="object" order="1" type="key-value" /> -->
				<assign field="postdata-key" key="id" lhs="object_id" order="2" type="key-value" />
				<assign lhs="object_type" order="3" rhs="Comment" type="value" />
				<assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" />
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 

				<trigger endprocessing="y" name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<!-- <assign field="host" lhs="instance_id" normalize="box-instance" order="5" type="field" /> -->
				<trigger name="Edit" order="7"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<!-- <var name="object" /> -->
					<var name="object_id" />
				<!-- 	<dict action="update" key="object_id" val="object" /> -->
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>

	<resource name="delete_comment" path="/api/files\.comments\.delete">
		<init>
			<assign lhs="object" order="1" rhs=" " type="value" /> 
			<assign lhs="object_id" order="2" rhs=" " type="value" /> 
		</init>
		<request>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="postdata-key" key="id" mtype="kvp" rhs="id" />
				</and>
				<assign field="postdata-key" key="id" lhs="object_id" order="1" type="key-value" />
				<assign lhs="object_type" order="2" rhs="Comment" type="value" />
				<assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" />
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 
				<assign field="host" lhs="instance_id" normalize="box-instance" order="5" type="field" />
				<trigger name="Delete" order="6"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object_id" />
				<!-- 	<dict action="lookup" key="object_id" val="object" />
					<var name="object" /> -->
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>

	<resource name="add_delete_message" path="/customize/loading">
		<id>
			<match field="content-type" mtype="match_notpresent" keymtype="strstr" rhs="multipart/form-data"/> 
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="value" /> 
			<assign lhs="object_id" order="2" rhs=" " type="value" /> 
		</init>
		<request>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="postdata-key" key="add" mtype="kvp" rhs="1" />
				</and>
				<!-- <assign field="postdata-key" key="message" lhs="object" order="1" type="key-value" /> -->
				<assign lhs="object_type" order="2" rhs="Message" type="value" />
				<assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" />
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 

				<trigger endprocessing="y" name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<!-- <assign field="host" lhs="instance_id" normalize="box-instance" order="5" type="field" /> -->
				<trigger name="Create" order="7"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<!-- <var name="object" /> -->
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>

			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="get" />
					<match field="uriparam-key" key="removed" mtype="kvp" rhs="1" />
				</and>
				<assign lhs="object_type" order="1" rhs="Message" type="value" />
				<assign lhs="tmp_object_id" order="2" rhs="from_user" type="value" />
				<trigger name="Dummy" order="3">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 
				<!--  <assign field="host" lhs="instance_id" normalize="box-instance" order="4" type="field" /> -->
				<trigger name="Delete" order="5"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>


	<resource name="add_remove_emoji" path="/customize/emoji">
		<init>
			<assign lhs="object" order="1" rhs=" " type="value" /> 
		</init>
		<request>
			<info>
				<field encodingtype="MIME" name="post-data" parsertype="mimestream" />
			</info>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<!-- 		<match field="post-data" key="name" mtype="mime-kvp" rhs="add" />
					<match field="post-data" key="name" mtype="mime-kvp" rhs="alias" /> -->
					<match field="post-data" key="name" mtype="mime-kvp" rhs="name" />
				</and>
				<assign field="post-data" lhs="object" key="name" order="1" type="mime-get-value" />
				<assign lhs="object_type" order="2" rhs="Settings" type="value" />
				<assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" />
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 

				<trigger endprocessing="y" name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<!--  <assign field="host" lhs="instance_id" normalize="box-instance" order="5" type="field" /> -->
				<trigger name="Create" order="7"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>

			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="post-data" key="name" mtype="mime-kvp" rhs="remove" />
				</and>
				<assign field="post-data" lhs="object" order="1" type="mime-get-value" />
				<assign lhs="object_type" order="2" rhs="Settings" type="value" />
				<assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" />
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 
				<!--  <assign field="host" lhs="instance_id" normalize="box-instance" order="5" type="field" /> -->
				<trigger name="Delete" order="6"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>


	<resource name="delete_file" path="/api/files\.delete">
		<id>
			<match field="content-type" mtype="match_notpresent" keymtype="strstr" rhs="multipart/form-data"/> 
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="reset-var" /> 
			<assign lhs="object_id" order="2" rhs=" " type="reset-var" /> 
		</init>
		<request>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="postdata-key" key="file" mtype="kvp" rhs="file" />
				</and>
				<assign field="postdata-key" key="file" lhs="object_id" order="1" type="key-value" />
				<assign lhs="object_type" order="2" rhs="File" type="value" />
				<assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" />
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 

				<trigger endprocessing="y" name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>				
				<trigger name="Delete" order="7"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object_id" />
					<dict action="lookup" key="object_id" val="object" />
					<var name="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>

	<resource name="pin_file" path="/api/pins\.add">
		<id>
			<match field="content-type" mtype="match_notpresent" keymtype="strstr" rhs="multipart/form-data"/> 
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="value" /> 
			<assign lhs="object_id" order="2" rhs=" " type="value" /> 
		</init>
		<request>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="postdata-key" key="file" mtype="kvp" rhs="file" />
				</and>
				<assign field="postdata-key" key="file" lhs="object_id" order="1" type="key-value" />
				<assign lhs="object_type" order="2" rhs="File" type="value" />
				<assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" />
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 

				<trigger endprocessing="y" name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<!-- <assign field="host" lhs="instance_id" normalize="box-instance" order="5" type="field" /> -->
				<trigger name="Edit" order="7"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object_id" />
					<dict action="lookup" key="object_id" val="object" />
					<var name="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>


	<resource name="unpin_file" path="/api/pins\.remove">
		<id>
			<match field="content-type" mtype="match_notpresent" keymtype="strstr" rhs="multipart/form-data"/> 
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="value" /> 
			<assign lhs="object_id" order="2" rhs=" " type="value" /> 
		</init>
		<request>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="postdata-key" key="file" mtype="kvp" rhs="file" />
				</and>
				<assign field="postdata-key" key="file" lhs="object_id" order="1" type="key-value" />
				<assign lhs="object_type" order="2" rhs="File" type="value" />
				<assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" />
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 

				<trigger endprocessing="y" name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<!--  <assign field="host" lhs="instance_id" normalize="box-instance" order="5" type="field" /> -->
				<trigger name="Edit" order="7" > 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object_id" />
					<dict action="lookup" key="object_id" val="object" />
					<var name="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>


	<resource name="Edit_file" path="/api/files\.edit">
		<id>
			<match field="content-type" mtype="match_notpresent" keymtype="strstr" rhs="multipart/form-data"/> 
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="reset-var" /> 
			<assign lhs="object_id" order="2" rhs=" " type="reset-var" /> 
		</init>
		<request>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="postdata-key" key="file" mtype="kvp" rhs="file" />
				</and>
				<assign field="postdata-key" key="file" lhs="object_id" order="1" type="key-value" />
				<assign field="postdata-key" key="title" lhs="object" order="2" type="key-value" />
				<assign lhs="object_type" order="3" rhs="File" type="value" />
				<assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" />
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 

				<trigger endprocessing="y" name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<!-- <assign field="host" lhs="instance_id" normalize="box-instance" order="5" type="field" /> -->
				<trigger name="Edit" order="7" > 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object_id" />
					<var name="object" />
					<dict action="update" key="object_id" val="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>

	<resource name="Share_file" path="/api/files\.share">
		<id>
			<match field="content-type" mtype="match_notpresent" keymtype="strstr" rhs="multipart/form-data"/> 
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="reset-var" /> 
			<assign lhs="object_id" order="2" rhs=" " type="reset-var" /> 
		</init>
		<request>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="postdata-key" key="channel" mtype="kvp" rhs="channel" />
				</and>
				<assign field="postdata-key" key="channel" lhs="object_id" order="1" type="key-value" />
				<trigger name="Dummy" order="2">
					<var name="object_id" />  
					<var name="object" />  
					<dict action="lookup" key="object_id" val="object" />
				</trigger> 
				<assign lhs="to_user" order="3" rhs="object" type="variable" />
				<assign lhs="object_id" order="4" rhs=" " type="value" />
				<assign lhs="object" order="5" rhs=" " type="value" />
			</actions>

			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="postdata-key" key="file" mtype="kvp" rhs="file" />
				</and>
				<assign field="postdata-key" key="file" lhs="object_id" order="1" type="key-value" />
				<assign lhs="object_type" order="2" rhs="File" type="value" />
				<assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" />
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 

				<trigger endprocessing="y" name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<!-- <assign field="host" lhs="instance_id" normalize="box-instance" order="5" type="field" /> -->
				<trigger name="Share" order="7" > 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object_id" />
					<dict action="lookup" key="object_id" val="object" />
					<var name="object" />
					<var name="to_user" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>

	<resource name="Unshare_file" path="/api/files\.unshare">
		<id>
			<match field="content-type" mtype="match_notpresent" keymtype="strstr" rhs="multipart/form-data"/> 
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="reset-var" /> 
			<assign lhs="object_id" order="2" rhs=" " type="reset-var" /> 
		</init>
		<request>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="postdata-key" key="channel" mtype="kvp" rhs="channel" />
				</and>
				<assign field="postdata-key" key="channel" lhs="object_id" order="1" type="key-value" />
				<trigger name="Dummy" order="2">
					<var name="object_id" />  
					<var name="object" />  
					<dict action="lookup" key="object_id" val="object" />
				</trigger> 
				<assign lhs="to_user" order="3" rhs="object" type="variable" />
				<assign lhs="object_id" order="4" rhs=" " type="value" />
				<assign lhs="object" order="5" rhs=" " type="value" />
			</actions>

			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="postdata-key" key="file" mtype="kvp" rhs="file" />
				</and>
				<assign field="postdata-key" key="file" lhs="object_id" order="1" type="key-value" />
				<assign lhs="object_type" order="2" rhs="User" type="value" />
				<assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" />
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger>

				<trigger endprocessing="y" name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>				
				<!-- <assign field="host" lhs="instance_id" normalize="box-instance" order="5" type="field" /> -->
				<trigger name="Delete" order="7" > 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object_id" />
					<dict action="lookup" key="object_id" val="object" />
					<var name="object" />
					<var name="to_user" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>


	<resource name="Create_post" path="/files/create/post">
		<init>
			<assign lhs="object" order="1" rhs=" " type="value" /> 
			<assign lhs="object_id" order="2" rhs=" " type="value" /> 
		</init>
		<request>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="postdata-key" key="title" mtype="kvp" rhs="title" />
				</and>
				<assign field="postdata-key" key="title" lhs="object" order="1" type="key-value" />
				<assign lhs="object_type" order="2" rhs="Post" type="value" />
				<assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" />
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 

				<trigger endprocessing="y" name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<!-- <assign field="host" lhs="instance_id" normalize="box-instance" order="5" type="field" /> -->
				<trigger name="Create" order="7"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
				<assign lhs="object_id" order="7" rhs=" " type="value" />
				<assign lhs="object" order="8" rhs=" " type="value" />
			</actions>

		</request>
	</resource>

	<!-- to update object_id with object for a post -->

	<resource name="updateid_post" path="/files/.+/{object_id}/{object}">
		<id>
			<match mtype="exact-depth" field="uripath" depth="4" />
		</id>
		<request>
			<actions>
				<match field="method" key="httpmethods" mtype="nsdef" rhs="get" />
				<trigger name="Dummy" order="1"> 
					<var name="object_id" />
					<var name="object" />
					<dict action="update" key="object_id" val="object" />
				</trigger>
			</actions>
		</request>
	</resource>


	<resource name="Edit_post" path="/files/.+/{object_id}/.+/edit">
		<id>
			<match mtype="exact-depth" field="uripath" depth="5" />
		</id>
		<request>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="postdata-key" key="title" mtype="kvp" rhs="title" />
				</and>
				<assign field="postdata-key" key="title" lhs="object" order="1" type="key-value" />
				<assign lhs="object_type" order="2" rhs="Post" type="value" />
				<assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" />
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 

				<trigger endprocessing="y" name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<!--  <assign field="host" lhs="instance_id" normalize="box-instance" order="5" type="field" /> -->
				<trigger name="Edit" order="7" > 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object" />
					<var name="object_id" />
					<dict action="update" key="object_id" val="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
				<assign lhs="object_id" order="9" rhs=" " type="value" />
				<assign lhs="object" order="8" rhs=" " type="value" />
			</actions>

		</request>
	</resource>

	<resource name="Invite_user" path="/api/users\.admin\.invite">
		<id>
			<match field="content-type" mtype="match_notpresent" keymtype="strstr" rhs="multipart/form-data"/> 
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="reset-var" /> 
			<assign lhs="object_id" order="2" rhs=" " type="reset-var" /> 
		</init>
		<request>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="postdata-key" key="email" mtype="kvp" rhs="email" />
				</and>
				<assign field="postdata-key" key="email" lhs="object" order="1" type="key-value" />
				<assign lhs="to_user" rhs="object" type="variable" order="2" /> 
				<assign lhs="object_type" order="3" rhs="User" type="value" />
				<assign lhs="tmp_object_id" order="4" rhs="from_user" type="value" />
				<trigger name="Dummy" order="5">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 

				<trigger endprocessing="y" name="Dummy" order="7">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<!--  <assign field="host" lhs="instance_id" normalize="box-instance" order="6" type="field" /> -->
				<trigger name="Invite" order="8" > 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object" />
					<var name="to_user" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>

	<resource name="Delete_message" path="/api/chat\.delete">
		<id>
			<match field="content-type" mtype="match_notpresent" keymtype="strstr" rhs="multipart/form-data"/> 
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="reset-var" /> 
			<assign lhs="object_id" order="2" rhs=" " type="reset-var" /> 
		</init>
		<request>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="postdata-key" key="channel" mtype="kvp" rhs="channel" />
				</and>
				<assign field="postdata-key" key="channel" lhs="object_id" order="1" type="key-value" />
				<assign lhs="object_type" order="2" rhs="Message" type="value" />
				<assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" />
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 

				<trigger endprocessing="y" name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>

				<trigger name="Delete" order="7" > 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object_id" />
					<!-- <dict action="lookup" key="object_id" val="object" />
					<var name="object" /> -->
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>

	<resource name="Edit_message" path="/api/chat\.update">
		<id>
			<match field="content-type" mtype="match_notpresent" keymtype="strstr" rhs="multipart/form-data"/> 
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="value" /> 
			<assign lhs="object_id" order="2" rhs=" " type="value" /> 
		</init>
		<request>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="postdata-key" key="text" mtype="kvp" rhs="text" />
				</and>
				<!-- <assign field="postdata-key" key="text" lhs="object" order="1" type="key-value" /> -->
				<assign lhs="object_type" order="2" rhs="Message" type="value" />
				<assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" />
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 

				<trigger endprocessing="y" name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<!-- <assign field="host" lhs="instance_id" normalize="box-instance" order="5" type="field" /> -->
				<trigger name="Edit" order="7" > 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<!-- <var name="object" /> -->
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>

	<resource name="Import_File" path="/services/import/.+">
		<init>
			<assign lhs="object" order="1" rhs=" " type="value" /> 
		</init> 
		<request>
			<info>
				<field encodingtype="MIME" name="post-data" parsertype="mimestream" />
			</info>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="post-data" key="filename" mtype="mime-kvp" rhs="filename" />
				</and>
				<assign field="post-data" lhs="object" order="1" type="mime-get-value" />
				<!-- <assign order="1" type="key-value" lhs="object" field="content-disp-key" key="filename" normalize="uri-back-slash" /> -->
				<assign lhs="object_type" order="2" rhs="File" type="value" />
				<assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" />
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 

				<trigger endprocessing="y" name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<!--  <assign field="host" lhs="instance_id" normalize="box-instance" order="5" type="field" /> -->
				<trigger name="Upload" order="7">
					<external>
						<action name="send_event" />                        
						<action name="inspect_req" />
					</external>
					<var name="object_type" />
					<var name="object" />
					<var name="instance_id" />  
					<var name="from_user" />
					<var name="file_size" />
				</trigger> 
			</actions>
		</request>
	</resource>


	<resource name="Edit_name_instance" path="/admin/name"> 
		<id>
			<match mtype="exact-depth" field="uripath" depth="2" />
		</id>
		<request>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="postdata-key" key="name" mtype="kvp" rhs="name" />
				</and>
				<assign field="postdata-key" key="name" lhs="object" order="1" type="key-value" />
				<assign field="postdata-key" key="url" lhs="instance_id" order="2" type="key-value" />
				<assign lhs="object_type" order="3" rhs="Settings" type="value" />
				<assign lhs="tmp_object_id" order="4" rhs="from_user" type="value" />
				<trigger name="Dummy" order="5">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger>

				<trigger endprocessing="y" name="Dummy" order="7">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="update" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger> 
				<trigger name="Edit" order="8"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>

		</request>
	</resource>


	<resource name="exportdata_tofile" path="/services/export/download/.+/.+">
		<id>
			<match mtype="exact-depth" field="uripath" depth="5" />
		</id>

		<request>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="get" />
					<match field="uripath" mtype="strstr" rhs="/download" />
				</and>
				<assign lhs="tmp" order="1" rhs="105" type="value" />           
			</actions>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>

		</request>

		<response>
			<actions>
				<and>
					<match field="status" key="http_statuscode" mtype="nsdef" rhs="ok" />
					<match lhsvar="tmp" mtype="eq" rhs="105" />
				</and>
				<assign field="content-disp-key" key="filename" keymtype="strstr" lhs="object" order="1" type="key-value" />
				<assign lhs="object" normalize="slides-normalize" order="4" rhs="object" type="variable" />
				<assign lhs="tmp" order="2" rhs="0" type="value" />
				<assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" />
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger>

				<trigger endprocessing="y" name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<!--  <assign field="host" lhs="instance_id" normalize="box-instance" order="5" type="field" /> -->
				<trigger name="Download" order="7">
					<external>
						<action name="send_event" />
						<action name="inspect_rsp" />
					</external>
					<var name="object" />
					<var name="instance_id" />  
					<var name="object_type" />
					<var name="from_user" />
				</trigger>
			</actions>

		</response>
	</resource>

	<resource name="Delete_export" path="/services/export">
		<id>
			<match mtype="exact-depth" field="uripath" depth="2" />
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="reset-var" /> 
			<assign lhs="object_id" order="2" rhs=" " type="reset-var" /> 
		</init>
		<request>
			<info>
				<field encodingtype="MIME" name="post-data" parsertype="mimestream" />
			</info>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="post-data" key="name" mtype="mime-kvp" rhs="remove_export" />
				</and>
				<assign lhs="object" order="1" rhs="Export Data" type="value" /> 
				<assign lhs="object_type" order="2" rhs="File" type="value" />
				<assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" />
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 

				<trigger name="Dummy" order="7">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<!-- <assign field="host" lhs="instance_id" normalize="box-instance" order="5" type="field" /> -->
				<trigger name="Delete" order="7" > 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>


	<resource name="upload_delete_photo" path="/account/photo">
		<init>
			<assign lhs="object" order="1" rhs=" " type="reset-var" /> 
			<assign lhs="object_id" order="2" rhs=" " type="reset-var" /> 
		</init>
		<request>
			<info>
				<field encodingtype="MIME" name="post-data" parsertype="mimestream" />
			</info>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
				<assign field="content_len" lhs="file_size" type="field" order="1" />
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="post-data" key="name" mtype="mime-kvp" rhs="upload" />
					<match field="post-data" key="filename" mtype="mime-kvp" rhs="filename" />
				</and>
				<assign field="post-data" lhs="object" order="1" type="mime-get-value" />
				<assign lhs="object_type" order="2" rhs="File" type="value" />
				<assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" />
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 

				<trigger endprocessing="y" name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<!--  <assign field="host" lhs="instance_id" normalize="box-instance" order="5" type="field" /> -->
				<trigger name="Upload" order="7"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
					<var name="file_size"/>
				</trigger>
			</actions>


			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="get" />
					<match field="uriparam-key" key="clear" mtype="kvp" rhs="1" />
				</and>
				<assign lhs="object" order="1" rhs="Photo" type="value" /> 
				<assign lhs="object_type" order="2" rhs="File" type="value" />
				<assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" />
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 
				<!--  <assign field="host" lhs="instance_id" normalize="box-instance" order="5" type="field" /> -->
				<trigger name="Delete" order="6" > 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>

	<resource name="Invite_user_channel" path="/api/channels\.invite">
		<init>
			<assign lhs="object" order="1" rhs=" " type="reset-var" /> 
			<assign lhs="object_id" order="2" rhs=" " type="reset-var" /> 
		</init>
		<request>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="postdata-key" key="user" mtype="kvp" rhs="user" />
				</and>
				<assign field="postdata-key" key="user" lhs="object_id" order="1" type="key-value" />
				<assign lhs="object_type" order="2" rhs="User" type="value" />
				<assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" />
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger>

				<trigger endprocessing="y" name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>				
				<!-- <assign field="host" lhs="instance_id" normalize="box-instance" order="5" type="field" /> -->
				<trigger name="Invite" order="7" > 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object" />
					<var name="object_id" />
					<dict action="lookup" key="object_id" val="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>


	<resource name="Invite_user_group" path="/api/groups\.invite">
		<id>
			<match field="content-type" mtype="match_notpresent" keymtype="strstr" rhs="multipart/form-data"/> 
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="reset-var" /> 
			<assign lhs="object_id" order="2" rhs=" " type="reset-var" /> 
		</init>
		<request>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="postdata-key" key="user" mtype="kvp" rhs="user" />
				</and>
				<assign field="postdata-key" key="user" lhs="object_id" order="1" type="key-value" />
				<assign lhs="object_type" order="2" rhs="User" type="value" />
				<assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" />
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 

				<trigger endprocessing="y" name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<!-- <assign field="host" lhs="instance_id" normalize="box-instance" order="5" type="field" /> -->
				<trigger name="Invite" order="7"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object" />
					<var name="object_id" />
					<dict action="lookup" key="object_id" val="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>


	<resource name="Delete_user_group" path="/api/groups\.kick">
		<init>
			<assign lhs="object" order="1" rhs=" " type="reset-var" /> 
			<assign lhs="object_id" order="2" rhs=" " type="reset-var" /> 
		</init>
		<request>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="postdata-key" key="user" mtype="kvp" rhs="user" />
				</and>
				<assign field="postdata-key" key="user" lhs="object_id" order="1" type="key-value" />
				<assign lhs="object_type" order="2" rhs="User" type="value" />
				<assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" />
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 

				<trigger endprocessing="y" name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<!--  <assign field="host" lhs="instance_id" normalize="box-instance" order="5" type="field" /> -->
				<trigger name="Delete" order="7" > 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object" />
					<var name="object_id" />
					<dict action="lookup" key="object_id" val="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>

	<resource name="Delete_user_channel" path="/api/channels\.kick">
		<init>
			<assign lhs="object" order="1" rhs=" " type="reset-var" /> 
			<assign lhs="object_id" order="2" rhs=" " type="reset-var" /> 
		</init>
		<request>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="postdata-key" key="user" mtype="kvp" rhs="user" />
				</and>
				<assign field="postdata-key" key="user" lhs="object_id" order="1" type="key-value" />
				<assign lhs="object_type" order="2" rhs="User" type="value" />
				<assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" />
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 

				<trigger endprocessing="y" name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<!-- <assign field="host" lhs="instance_id" normalize="box-instance" order="5" type="field" /> -->
				<trigger name="Delete" order="7" > 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object" />
					<var name="object_id" />
					<dict action="lookup" key="object_id" val="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>

	<resource name="Edit_user_profile" path="/api/users\.profile\.set">
		<id>
			<match field="content-type" mtype="match_notpresent" keymtype="strstr" rhs="multipart/form-data"/> 
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="reset-var" /> 
			<assign lhs="object_id" order="2" rhs=" " type="reset-var" /> 
		</init>
		<request>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<!-- <match field="postdata-key" key="users" mtype="kvp" rhs="users" /> -->
				</and>
				<assign field="postdata-key" key="user" lhs="object_id" order="1" type="key-value" />
				<assign lhs="object_type" order="2" rhs="User" type="value" />
				<assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" />
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 

				<trigger endprocessing="y" name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<!-- <assign field="host" lhs="instance_id" normalize="box-instance" order="5" type="field" /> -->
				<trigger name="Edit" order="7"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object" />
					<var name="object_id" />
					<dict action="lookup" key="object_id" val="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>

	<resource name="file_download_ids_update" path="/api/files\.list">
		<id>
			<match field="content-type" mtype="strstr" rhs="multipart/form-data"/> 
		</id>
		<init>
			<assign lhs="object" order="1" type="reset-var" /> 
			<assign lhs="object_id" order="2" type="reset-var" /> 
			<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="3" type="field" norm-delim="." norm-token="norm-lhs" />
			<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="4" />
		</init>		
		<response>
			<info>
				<field encodingtype="JSON" name="resp-body" parsertype="jsonstream" />
			</info>
			<actions>
				<and>
					<!-- <match lhsvar="tmp" mtype="eq" rhs="108" />	 -->
					<match field="resp-body" mtype="struct-search-keys" searchkeys="{files[{url_private}]}" />
				</and>
				<assgin lhs="object" type="reset-var" order="1" />
				<assign field="resp-body" lhs="object" order="2" searchkeys="{files[{url_private}]}" type="struct-get-value" />
				<assign lhs="object" order="3" rhs="object" type="variable" norm-delim="//" norm-token="norm-rhs" normalize="str-tokenize" />
				<assign lhs="object" order="4" rhs="object" type="variable" norm-delim="/" norm-token="norm-rhs" normalize="str-tokenize" />
				<assign lhs="object" order="5" rhs="object" type="variable" norm-delim="/" norm-token="norm-rhs" normalize="str-tokenize" />
				<assign lhs="object" order="6" rhs="object" type="variable" norm-delim="/" norm-token="norm-lhs" normalize="str-tokenize" />
				<trigger name="Dummy" order="7">
					<var name="object" />
					<var name="tmp_object_id_instance" />
					<dict action="update" key="object" val="tmp_object_id_instance" />
				</trigger>
			</actions>
			<actions>
					<match field="resp-body" mtype="struct-parsing-done" />
			</actions>
		</response>
	</resource>
	
	<resource name="Create_link" path="/api/files\.sharedPublicURL">
		<id>
			<match field="content-type" mtype="match_notpresent" keymtype="strstr" rhs="multipart/form-data"/> 
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="reset-var" /> 
			<assign lhs="object_id" order="2" rhs=" " type="reset-var" /> 
		</init>
		<request>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="postdata-key" key="file" mtype="kvp" rhs="file" />
				</and>
				<assign lhs="tmp" order="1" rhs="108" type="value" />
			</actions>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
		</request>

		<response>
			<info>
				<field encodingtype="JSON" name="resp-body" parsertype="jsonstream" />
			</info>
			<actions>
				<and>
					<match lhsvar="tmp" mtype="eq" rhs="108" />
					<match field="resp-body" mtype="struct-search-keys" searchkeys="{file{url_download}}" />
				</and>
				<assign field="resp-body" lhs="object" order="1" searchkeys="{file{url_download}}" type="struct-get-value" />
				<assign lhs="tmp" order="2" rhs="0" type="value" />
				<assign lhs="object_type" order="3" rhs="Link" type="value" />
				<assign lhs="tmp_object_id" order="4" rhs="from_user" type="value" />
				<trigger name="Dummy" order="5">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger>

				<trigger endprocessing="y" name="Dummy" order="7">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>

				<trigger name="Create" order="8" > 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</response>
	</resource>

	<!-- Update user and user_id -->

	<!-- <resource name="update_userid" path="/api/auth\.findUser">
		<init>
			<assign lhs="object" order="1" rhs=" " type="reset-var" /> 
			<assign lhs="object_id" order="2" rhs=" " type="reset-var" /> 
		</init>
		<request>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="postdata-key" key="email" mtype="kvp" rhs="email" />
				</and>
				<assign field="postdata-key" key="email" lhs="object" order="1" type="key-value" />
				<assign lhs="tmp" order="2" rhs="110" type="value" />
			</actions>
		</request>

		<response>
			<info>
				<field encodingtype="JSON" name="resp-body" parsertype="jsonstream" />
			</info>
			<actions>
				<and>
					<match lhsvar="tmp" mtype="eq" rhs="110" />
					<match field="resp-body" mtype="struct-search-keys" searchkeys="{user_id}" />
				</and>
				<assign field="resp-body" lhs="object_id" order="1" searchkeys="{user_id}" type="struct-get-value" />
				<assign lhs="tmp" order="2" rhs="0" type="value" />
				<trigger name="Dummy" order="1"> 
					<var name="object_id" />
					<var name="object" />
					<dict action="update" key="object_id" val="object" />
				</trigger>
			</actions>
		</response>
	</resource>
 -->
	<resource name="update_users" path="/api/rtm\.start">
		<request>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" /> 
					<match field="postdata-key" key="login_ms" mtype="kvp" rhs="login_ms" />
				</and> 
				<assign lhs="tmp" order="1" rhs="116" type="value" />
			</actions>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
		</request>

		<response>
			<info>
				<field encodingtype="JSON" name="resp-body" parsertype="jsonstream" />
			</info>
			<actions>
				<and>
					<match lhsvar="tmp" mtype="eq" rhs="116" />
					<match field="resp-body" mtype="struct-search-keys" searchkeys="{users[{id}]}" />
				</and>
				<assign lhs="object_id" order="1" rhs=" " type="value" />
				<assign field="resp-body" lhs="object_id" order="2" searchkeys="{users[{id}]}" type="struct-get-value" />
			</actions>

			<actions>
				<and>
					<match lhsvar="tmp" mtype="eq" rhs="116" />
					<match field="resp-body" mtype="struct-search-keys" searchkeys="{users[{profile{email}}]}" />
					<!-- <match field="resp-body" mtype="struct-search-keys" searchkeys="{users[{name}]}" /> -->
				</and>
				<assign lhs="object" order="1" rhs=" " type="value" /> 
				<assign field="resp-body" lhs="object" order="2" searchkeys="{users[{profile{email}}]}" type="struct-get-value" />
				<!-- <assign field="resp-body" lhs="object" order="2" searchkeys="{users[{name}]}" type="struct-get-value" /> -->
				<trigger name="Dummy" order="3">
					<var name="object" />  
					<var name="object_id" />  
					<dict action="update" key="object_id" val="object" />
				</trigger>
				<assign type="value" order="4" lhs="object_id" rhs=" " />
				<assign type="value" order="5" lhs="object" rhs=" " />
			</actions>

			<actions>
				<and>
					<match lhsvar="tmp" mtype="eq" rhs="116" />
					<match field="resp-body" mtype="struct-search-keys" searchkeys="{groups[{id}]}" />
				</and>
				<assign lhs="object_id" order="1" rhs=" " type="value" />
				<assign field="resp-body" lhs="object_id" order="2" searchkeys="{groups[{id}]}" type="struct-get-value" />
			</actions>

			<actions>
				<and>
					<match lhsvar="tmp" mtype="eq" rhs="116" />
					<match field="resp-body" mtype="struct-search-keys" searchkeys="{groups[{name}]}" />
				</and>
				<assign lhs="object" order="1" rhs=" " type="value" /> 
				<assign field="resp-body" lhs="object" order="2" searchkeys="{groups[{name}]}" type="struct-get-value" />
				<trigger name="Dummy" order="3">
					<var name="object" />  
					<var name="object_id" />  
					<dict action="update" key="object_id" val="object" />
				</trigger>
				<assign type="value" order="4" lhs="object_id" rhs=" " />
				<assign type="value" order="5" lhs="object" rhs=" " />			
			</actions>

			<actions>
				<and>
					<match lhsvar="tmp" mtype="eq" rhs="116" />
					<match field="resp-body" mtype="struct-search-keys" searchkeys="{channels[{id}]}" />
				</and>
				<assign lhs="object_id" order="1" rhs=" " type="value" />
				<assign field="resp-body" lhs="object_id" order="2" searchkeys="{channels[{id}]}" type="struct-get-value" />
			</actions>

			<actions>
				<and>
					<match lhsvar="tmp" mtype="eq" rhs="116" />
					<match field="resp-body" mtype="struct-search-keys" searchkeys="{channels[{name}]}" />
				</and>
				<assign lhs="object" order="1" rhs=" " type="value" /> 
				<assign field="resp-body" lhs="object" order="2" searchkeys="{channels[{name}]}" type="struct-get-value" />
				<trigger name="Dummy" order="3">
					<var name="object" />  
					<var name="object_id" />  
					<dict action="update" key="object_id" val="object" />
				</trigger>
				<assign type="value" order="4" lhs="object_id" rhs=" " />
				<assign type="value" order="5" lhs="object" rhs=" " />
			</actions>

			<actions>
				<and>
					<match lhsvar="tmp" mtype="eq" rhs="116" />
					<match field="resp-body" mtype="struct-search-keys" searchkeys="{ims[{id}]}" />
				</and>
				<assign lhs="object_id" order="1" rhs=" " type="value" />
				<assign field="resp-body" lhs="object_id" order="2" searchkeys="{ims[{id}]}" type="struct-get-value" />
			</actions>

			<actions>
				<and>
					<match lhsvar="tmp" mtype="eq" rhs="116" />
					<match field="resp-body" mtype="struct-search-keys" searchkeys="{ims[{user}]}" />
				</and>
				<assign lhs="temp_var1" order="1" rhs=" " type="value" /> 
				<assign field="resp-body" lhs="temp_var1" order="2" searchkeys="{ims[{user}]}" type="struct-get-value" />
				<trigger name="Dummy" order="3">
					<var name="object" />  
					<var name="temp_var1" />  
					<dict action="lookup" key="temp_var1" val="object" />
				</trigger>
			</actions>
			<actions>
				<and>
					<match lhsvar="tmp" mtype="eq" rhs="116" />
					<match field="resp-body" mtype="struct-search-keys" searchkeys="{ims[{created}]}" />
				</and>
				<trigger name="Dummy" order="1">
					<var name="object" />  
					<var name="object_id" />  
					<dict action="update" key="object_id" val="object" />
				</trigger>
				<assign type="value" order="4" lhs="object_id" rhs=" " />
				<assign type="value" order="5" lhs="object" rhs=" " />
			</actions>
		</response>

	</resource>


	<resource name="Delete_link" path="/api/files\.revokePublicURL">
		<id>
			<match field="content-type" mtype="match_notpresent" keymtype="strstr" rhs="multipart/form-data"/> 
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="value" /> 
		</init>
		<init>
			<assign lhs="object" order="1" rhs=" " type="reset-var" /> 
			<assign lhs="object_id" order="2" rhs=" " type="reset-var" /> 
		</init>
		<request>
			<!-- <actions>
				<assign field="host" lhs="instance_id" normalize="box-instance" order="6" type="field" />
			</actions> -->
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="postdata-key" key="file" mtype="kvp" rhs="file" />
				</and>
				<assign lhs="tmp" order="1" rhs="109" type="value" />
			</actions>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
		</request>

		<response>
			<info>
				<field encodingtype="JSON" name="resp-body" parsertype="jsonstream" />
			</info>
			<actions>
				<and>
					<match lhsvar="tmp" mtype="eq" rhs="109" />
					<match field="resp-body" mtype="struct-search-keys" searchkeys="{file{title}}" />
				</and>
				<assign field="resp-body" lhs="object" order="1" searchkeys="{file{title}}" type="struct-get-value" />
				<assign lhs="tmp" order="2" rhs="0" type="value" />
				<assign lhs="object_type" order="3" rhs="Link" type="value" />
				<assign lhs="tmp_object_id" order="4" rhs="from_user" type="value" />
				<trigger name="Dummy" order="5">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger>				 

				<trigger endprocessing="y" name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="Delete" order="8" > 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</response>
	</resource>

	<resource name="Edit_permissions" path="/api/users\.admin\.set.+">
		<id>
			<match field="content-type" mtype="match_notpresent" keymtype="strstr" rhs="multipart/form-data"/> 
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="reset-var" /> 
			<assign lhs="object_id" order="2" rhs=" " type="reset-var" /> 
		</init>
		<request>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="postdata-key" key="user" mtype="kvp" rhs="user" />
				</and>
				<assign field="postdata-key" key="user" lhs="object_id" order="1" type="key-value" />
				<assign lhs="object_type" order="2" rhs="Settings" type="value" />
				<assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" />
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger>


				<trigger endprocessing="y" name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="Edit" order="8"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object_id" />
					<dict action="lookup" key="object_id" val="object" />
					<var name="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>

	<resource name="Edit_settings_users" path="/api/team\.prefs\.set">
		<id>
			<match field="content-type" mtype="match_notpresent" keymtype="strstr" rhs="multipart/form-data"/> 
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="reset-var" /> 
			<assign lhs="object_id" order="2" rhs=" " type="reset-var" /> 
		</init>
		<request>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="postdata-key" key="prefs" mtype="kvp" rhs="prefs" />
				</and>
				<assign lhs="tmp" order="1" rhs="118" type="value" />
			</actions>
		</request>
		<response>
			<info>
				<field encodingtype="JSON" name="resp-body" parsertype="jsonstream" />
			</info>
			<actions>
				<and>
					<match lhsvar="tmp" mtype="eq" rhs="118" />
					<match field="resp-body" mtype="struct-search-keys" searchkeys="{prefs{default_channels[*]}}" />
				</and>
				<assign field="resp-body" lhs="object_id" order="1" searchkeys="{prefs{default_channels[*]}}" type="struct-get-value" />
				<assign lhs="tmp" order="2" rhs="0" type="value" />
				<assign lhs="object_type" order="3" rhs="Settings" type="value" />
				<assign lhs="tmp_object_id" order="4" rhs="from_user" type="value" />
				<trigger name="Dummy" order="5">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger>


				<trigger endprocessing="y" name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="Edit" order="8" > 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object_id" />
					<dict action="chainlookup" delim="," key="object_id" val="object" />
					<var name="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</response>
	</resource>

	<!-- iOS Browser coverage -->

	<resource name="change_teamicon" path="/customize/icon">
		<init>
			<assign lhs="object" order="1" rhs=" " type="reset-var" /> 
			<assign lhs="object_id" order="2" rhs=" " type="reset-var" /> 
		</init>
		<request>
			<info>
				<field encodingtype="MIME" name="post-data" parsertype="mimestream" />
			</info>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<match field="post-data" key="name" mtype="mime-kvp" rhs="token" />
				<assign field="post-data" lhs="tmp_object_id" order="1" type="mime-get-value" />
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="post-data" key="name" mtype="mime-kvp" rhs="upload" />
					<match field="post-data" key="filename" mtype="mime-kvp" rhs="filename" />
					<match field="post-data" mtype="mime-parsing-done" />
				</and>
				<assign field="post-data" lhs="object" order="1" type="mime-get-value" />
				<assign lhs="object_type" order="2" rhs="File" type="value" />
				<!-- <assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" /> -->
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger>

				<trigger name="Dummy" order="7">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>				
				<!-- <assign field="host" lhs="instance_id" normalize="box-instance" order="5" type="field" /> -->
				<trigger name="Upload" order="8" > 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>

	<resource name="Delete_message_mime" path="/api/chat\.delete">
		<id>
			<match field="content-type" mtype="strstr" rhs="multipart/form-data" />
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="reset-var" /> 
			<assign lhs="object_id" order="2" rhs=" " type="reset-var" /> 
		</init>
		<request>
			<info>
				<field encodingtype="MIME" name="post-data" parsertype="mimestream" />
			</info>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<match field="post-data" key="name" mtype="mime-kvp" rhs="token" />
				<assign field="post-data" lhs="tmp_object_id" order="1" type="mime-get-value" />
			</actions>			
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="post-data" key="name" mtype="mime-kvp" rhs="channel" />
					<match field="post-data" mtype="mime-parsing-done" />					
				</and>
				<assign field="post-data" lhs="object_id" order="1" type="mime-get-value" />
				<assign lhs="object_type" order="2" rhs="Message" type="value" />
				<!-- <assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" /> -->
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger>				 

				<trigger name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="Delete" order="7" block-template="slack_upload.block"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object_id" />
					<!-- <dict action="lookup" key="object_id" val="object" />
					<var name="object" /> -->
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />					
				</trigger>
			</actions>
		</request>
	</resource>


	<resource name="add_comment_mime" path="/api/files\.comments\.add" enable-cibuf="Y">
		<id>
			<match field="content-type" mtype="strstr" rhs="multipart/form-data" />
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="reset-var" /> 
			<assign lhs="object_id" order="2" rhs=" " type="reset-var" /> 
		</init>	
		<request>
			<info>
				<field encodingtype="MIME" name="post-data" parsertype="mimestream" />
			</info>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<match field="post-data" key="name" mtype="mime-kvp" rhs="token" />
				<assign field="post-data" key="name" lhs="tmp_object_id" order="1" type="mime-get-value" />
			</actions>	
			<actions>
				<and>
					<match field="post-data" key="name" mtype="mime-kvp" rhs="comment" />
				</and>			
				<assign field="post-data" key="comment" lhs="chat_message" order="1" type="mime-get-value" />				

			</actions>
			<actions>
				<match mtype="mime-parsing-done" field="post-data"/>				
				<assign order="1" type="mime-add-inspect-buf" activity="Post" rhs="chat_message"/>
				<assign lhs="object_type" order="3" rhs="Comment" type="value" />
				<!-- <assign lhs="tmp_object_id" order="4" rhs="from_user" type="value" /> -->
				<trigger name="Dummy" order="5">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger>
				<trigger name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="Post" order="7" block-template="slack_upload.block"> 
					<external>
						<action name="inspect_req"/>						
						<action name="send_event" />
					</external>
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>

	<resource name="Delete_file_mime" path="/api/files\.delete">
		<id>
			<match field="content-type" mtype="strstr" rhs="multipart/form-data" />
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="reset-var" /> 
			<assign lhs="object_id" order="2" rhs=" " type="reset-var" /> 
		</init>
		<request>
			<info>
				<field encodingtype="MIME" name="post-data" parsertype="mimestream" />
			</info>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="post-data" key="name" mtype="mime-kvp" rhs="token" />					
				</and>
				<assign field="post-data" lhs="tmp_object_id" order="1" type="mime-get-value" />				
			</actions>
			<actions>
				<and>
					<match field="post-data" key="name" mtype="mime-kvp" rhs="file" />					
				</and>
				<assign field="post-data" lhs="object_id" order="1" type="mime-get-value" />				
			</actions>			
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="post-data" mtype="mime-parsing-done" />
				</and>
				<assign lhs="object_type" order="2" rhs="File" type="value" />
				<!-- <assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" /> -->
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 
				<trigger name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="Delete" order="7" block-template="slack_upload.block"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object_id" />
					<dict action="lookup" key="object_id" val="object" />
					<var name="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />					
				</trigger>
			</actions>
		</request>
	</resource>

	<resource name="Edit_file_mime" path="/api/files\.edit" >
		<id>
			<match field="content-type" mtype="strstr" rhs="multipart/form-data" />
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="reset-var" /> 
			<assign lhs="object_id" order="2" rhs=" " type="reset-var" /> 
		</init>
		<request>
			<info>
				<field encodingtype="MIME" name="post-data" parsertype="mimestream" />
			</info>	
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="post-data" key="name" mtype="mime-kvp" rhs="token" />					
				</and>
				<assign field="post-data" lhs="tmp_object_id" order="1" type="mime-get-value" />				
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="post-data" key="name" mtype="mime-kvp" rhs="title" />
					<match field="post-data" mtype="mime-parsing-done" />
				</and>
				<assign field="post-data" key="file" lhs="object" order="1" type="mime-get-value" />
				<assign lhs="object_type" order="3" rhs="File" type="value" />
				<!-- <assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" /> -->
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 
				<trigger name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="Edit" order="7" block-template="slack_upload.block"> 
					<external>
						<action name="nspolicy_lookup"/>						
						<action name="send_event" />
					</external>
					<var name="object" />					
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>

	<resource name="archive_channel_mime" path="/api/channels\.archive">
		<id>
			<match field="content-type" mtype="strstr" rhs="multipart/form-data" />
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="reset-var" /> 
			<assign lhs="object_id" order="2" rhs=" " type="reset-var" /> 
		</init>
		<request>
			<info>
				<field encodingtype="MIME" name="post-data" parsertype="mimestream" />
			</info>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="post-data" key="name" mtype="mime-kvp" rhs="token" />					
				</and>
				<assign field="post-data" lhs="tmp_object_id" order="1" type="mime-get-value" />				
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="post-data" key="name" mtype="mime-kvp" rhs="channel" />
					<match field="post-data" mtype="mime-parsing-done" />
				</and>
				<assign field="post-data" key="name" lhs="object_id" order="1" type="mime-get-value" />
				<assign lhs="object_type" order="2" rhs="Channel" type="value" />

				<!-- <assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" /> -->
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger>
				<trigger  name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="Delete" order="8" block-template="slack_upload.block"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object_id" />
					<dict action="lookup" key="object_id" val="object" />
					<var name="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>


	<resource name="archive_groups_mime" path="/api/groups\.archive">
		<id>
			<match field="content-type" mtype="strstr" rhs="multipart/form-data" />
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="reset-var" /> 
			<assign lhs="object_id" order="2" rhs=" " type="reset-var" /> 
		</init>
		<request>
			<info>
				<field encodingtype="MIME" name="post-data" parsertype="mimestream" />
			</info>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="post-data" key="name" mtype="mime-kvp" rhs="token" />					
				</and>
				<assign field="post-data" lhs="tmp_object_id" order="1" type="mime-get-value" />				
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="post-data" key="name" mtype="mime-kvp" rhs="channel" />
					<match field="post-data" mtype="mime-parsing-done" />
				</and>
				<assign field="post-data" key="name" lhs="object_id" order="1" type="mime-get-value" />
				<assign lhs="object_type" order="2" rhs="groups" type="value" />
				<!-- <assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" /> -->
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger>
				<trigger name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="Delete" order="8" block-template="slack_upload.block"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object_id" />
					<dict action="lookup" key="object_id" val="object" />
					<var name="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>

	<resource name="Create_post_mime" path="/api/files\.createSpace">
		<id>
			<match field="content-type" mtype="strstr" rhs="multipart/form-data" />
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="reset-var" /> 
			<assign lhs="object_id" order="2" rhs=" " type="reset-var" /> 
		</init>
		<request>
			<info>
				<field encodingtype="MIME" name="post-data" parsertype="mimestream" />
			</info>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="post-data" key="name" mtype="mime-kvp" rhs="token" />					
				</and>
				<assign field="post-data" lhs="tmp_object_id" order="1" type="mime-get-value" />				
			</actions>
			<actions>
				<and>
					<match field="post-data" mtype="mime-parsing-done" />
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
				</and>
				<assign lhs="object_type" order="2" rhs="File" type="value" />
				<!-- <assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" /> -->
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger>
				<trigger name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="Create" order="7" block-template="slack_upload.block"> 
					<external>
						<action name="nspolicy_lookup" />
					</external>
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
		<response>
			<info>
				<field encodingtype="JSON" name="resp-body" parsertype="jsonstream" />
			</info>
			<actions>
				<and>
					<match field="status" key="http_statuscode" mtype="nsdef" rhs="ok" />
					<match field="resp-body" mtype="struct-search-keys" searchkeys="{file{title}}" />
				</and>
				<assign field="resp-body" lhs="object" order="1" searchkeys="{file{title}}" type="struct-get-value" repeating_keys="true"/>
			</actions>
			<actions>
				<and>
					<match field="status" key="http_statuscode" mtype="nsdef" rhs="ok" />
					<match field="resp-body" mtype="struct-search-keys" searchkeys="{file{id}}" />
				</and>
				<assign field="resp-body" lhs="object_id" order="1" searchkeys="{file{id}}" type="struct-get-value" repeating_keys="true"/>
			</actions>
			<actions>
				<and>
					<match field="status" key="http_statuscode" mtype="nsdef" rhs="ok" />
					<match mtype="struct-parsing-done" field="resp-body" />
				</and>
				<assign lhs="tmp" order="1" rhs="0" type="value" />  
				<trigger  name="Create" order="2"> 
					<external>
						<action name="send_event" />
					</external>
					<var name="object" />
					<var name="from_user" />
					<var name="instance_id" />
					<var name="object_id" />
					<var name="object_type" />
				</trigger> 
			</actions>   
		</response>
	</resource>

	<resource name="Invite_user_mime" path="/api/users\.admin\.invite">
		<id>
			<match field="content-type" mtype="strstr" rhs="multipart/form-data" />
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="reset-var" /> 
			<assign lhs="object_id" order="2" rhs=" " type="reset-var" /> 
		</init>
		<request>
			<info>
				<field encodingtype="MIME" name="post-data" parsertype="mimestream" />
			</info>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="post-data" key="name" mtype="mime-kvp" rhs="token" />					
				</and>
				<assign field="post-data" lhs="tmp_object_id" order="1" type="mime-get-value" />				
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="post-data" key="name" mtype="mime-kvp" rhs="email" />
					<match field="post-data" mtype="mime-parsing-done" />
				</and>
				<assign field="post-data" key="email" lhs="object" order="1" type="mime-get-value" />
				<assign lhs="to_user" rhs="object" type="variable" order="2" /> 
				<assign lhs="object_type" order="3" rhs="User" type="value" />
				<!-- <assign lhs="tmp_object_id" order="4" rhs="from_user" type="value" /> -->
				<trigger name="Dummy" order="5">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger>
				<trigger name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="Invite" order="8" block-template="slack_upload.block"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object" />
					<var name="to_user" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>

	<resource name="create_channel_mime" path="/api/channels\.join">
		<id>
			<match field="content-type" mtype="strstr" rhs="multipart/form-data" />
		</id>			
		<init>
			<assign lhs="object" order="1" rhs=" " type="reset-var" /> 
			<assign lhs="object_id" order="2" rhs=" " type="reset-var" /> 
		</init>
		<request>
			<info>
				<field encodingtype="MIME" name="post-data" parsertype="mimestream" />
			</info>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="post-data" key="name" mtype="mime-kvp" rhs="token" />					
				</and>
				<assign field="post-data" lhs="tmp_object_id" order="1" type="mime-get-value" />				
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="post-data" key="name" mtype="mime-kvp" rhs="name" />
					<match field="post-data" mtype="mime-parsing-done" />
				</and>
				<assign field="post-data" key="name" lhs="object" order="1" type="mime-get-value" />
				<assign lhs="object_type" order="2" rhs="Channel" type="value" />
				<assign lhs="tmp" order="3" rhs="102" type="value" />
				<!-- 	<assign lhs="tmp_object_id" order="4" rhs="from_user" type="value" /> -->
				<trigger name="Dummy" order="5">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 
				<trigger name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="Create" order="7" block-template="slack_upload.block" > 
					<external>
						<action name="nspolicy_lookup" />
					</external>
					<var name="object" />
					<var name="object_id" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>

		<response>
			<info>
				<field encodingtype="JSON" name="resp-body" parsertype="jsonstream" />
			</info>
			<actions>
				<and>
					<match lhsvar="tmp" mtype="eq" rhs="102" />
					<match field="resp-body" mtype="struct-search-keys" searchkeys="{channel{id}}" />
					<match field="status" key="http_statuscode" mtype="nsdef" rhs="ok" />
				</and>
				<assign field="resp-body" lhs="object_id" order="1" searchkeys="{channel{id}}" type="struct-get-value" />
				<assign lhs="tmp" order="2" rhs="0" type="value" />
				<assign lhs="object_type" order="3" rhs="Channel" type="value" />
				<!-- <assign lhs="tmp_object_id" order="4" rhs="from_user" type="value" /> -->
				<trigger name="Dummy" order="5">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger>
				<trigger name="Create" order="7" > 
					<external>
						<action name="send_event" />
					</external>
					<var name="object" />
					<var name="object_id" />
					<dict action="update" key="object_id" val="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</response>
	</resource>

	<resource name="create_group_mime" path="/api/groups\.create">
		<id>
			<match field="content-type" mtype="strstr" rhs="multipart/form-data" />
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="reset-var" /> 
			<assign lhs="object_id" order="2" rhs=" " type="reset-var" /> 
		</init>
		<request>
			<info>
				<field encodingtype="MIME" name="post-data" parsertype="mimestream" />
			</info>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="post-data" key="name" mtype="mime-kvp" rhs="token" />					
				</and>
				<assign field="post-data" lhs="tmp_object_id" order="1" type="mime-get-value" />				
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="post-data" key="name" mtype="mime-kvp" rhs="name" />
					<match field="post-data" mtype="mime-parsing-done" />
				</and>
				<assign field="post-data" key="name" lhs="object" order="1" type="mime-get-value" />
				<assign lhs="object_type" order="2" rhs="Group" type="value" />
				<assign lhs="tmp" order="3" rhs="103" type="value" />
				<!-- <assign lhs="tmp_object_id" order="4" rhs="from_user" type="value" /> -->
				<trigger name="Dummy" order="5">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger>
				<trigger name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="Create" order="7" block-template="slack_upload.block"> 
					<external>
						<action name="nspolicy_lookup" />
					</external>
					<var name="object" />
					<var name="object_id" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>

		<response>
			<info>
				<field encodingtype="JSON" name="resp-body" parsertype="jsonstream" />
			</info>
			<actions>
				<and>
					<match lhsvar="tmp" mtype="eq" rhs="103" />
					<match field="resp-body" mtype="struct-search-keys" searchkeys="{group{id}}" />
					<match field="status" key="http_statuscode" mtype="nsdef" rhs="ok" />
				</and>
				<assign field="resp-body" lhs="object_id" order="1" searchkeys="{group{id}}" type="struct-get-value" />
				<assign lhs="tmp" order="2" rhs="0" type="value" />
				<assign lhs="object_type" order="3" rhs="Group" type="value" />
				<!-- <assign lhs="tmp_object_id" order="4" rhs="from_user" type="value" /> -->
				<trigger name="Dummy" order="5">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger>
				<trigger name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="Create" order="7"> 
					<external>
						<action name="send_event" />
					</external>
					<var name="object" />
					<var name="object_id" />
					<dict action="update" key="object_id" val="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</response>
	</resource>
	
	<resource name="create_channels_mime1" path="/api/channels\.create">
		<id>
			<and>
				<match field="content-type" mtype="strstr" rhs="multipart/form-data" />	
				<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
			</and>
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="reset-var" /> 
			<assign lhs="object_id" order="2" rhs=" " type="reset-var" /> 
		</init>
		<request>
			<info>
				<field encodingtype="MIME" name="post-data" parsertype="mimestream" />
			</info>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="post-data" key="name" mtype="mime-kvp" rhs="token" />					
				</and>
				<assign field="post-data" lhs="tmp_object_id" order="1" type="mime-get-value" />				
			</actions>
			<actions>
				<and>					
					<match field="post-data" key="name" mtype="mime-kvp" rhs="name" />
					<match field="post-data" mtype="mime-parsing-done" />
				</and>
				<assign field="post-data" key="name" lhs="object" order="1" type="mime-get-value" />
				<assign lhs="object_type" order="2" rhs="Channel" type="value" />
				<assign lhs="tmp" order="3" rhs="103" type="value" />
				<trigger name="Dummy" order="5">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger>
				<trigger name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="Create" order="7" block-template="slack_upload.block"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object" />
					<var name="object_id" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>		
	</resource>

	<resource name="Share_file_mime" path="/api/files\.share">
		<id>
			<and>
			<match field="content-type" mtype="strstr" rhs="multipart/form-data" />
			<match field="uripath" mtype="strcmp" rhs="/api/files.share" />
			</and>
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="reset-var" /> 
			<assign lhs="object_id" order="2" rhs=" " type="reset-var" /> 
		</init>
		<request>
			<info>
				<field encodingtype="MIME" name="post-data" parsertype="mimestream" />
			</info>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="post-data" key="name" mtype="mime-kvp" rhs="token" />					
				</and>
				<assign field="post-data" lhs="tmp_object_id" order="1" type="mime-get-value" />				
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="post-data" key="name" mtype="mime-kvp" rhs="file" />
					<match field="post-data" key="name" mtype="mime-kvp" rhs="channel" />
					<match field="post-data" mtype="mime-parsing-done" />
					<!-- 					<match field="post-data" mtype="mime-parsing-done" /> -->
				</and>
				<assign field="post-data" lhs="object_id" order="1" type="mime-get-value" />
				<assign lhs="object_type" order="2" rhs="File" type="value" />
				<!-- <assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" /> -->
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger>  
				<trigger name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>				
				<trigger name="Share" order="7" block-template="slack_upload.block"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object_id" />
					<dict action="lookup" key="object_id" val="object" />
					<var name="object" />
					<var name="to_user" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="post-data" key="name" mtype="mime-kvp" rhs="file" />
					<match field="uripath" mtype="strstr" rhs="PublicURL" />
				</and>
				<assign field="post-data" key="name" lhs="object_id" order="1" type="mime-get-value" />
				<assign lhs="object_type" order="2" rhs="Link" type="value" />
				<!-- <assign lhs="tmp_object_id" order="4" rhs="from_user" type="value" /> -->
				<trigger name="Dummy" order="5">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger>
				<trigger name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="Create" order="7" block-template="slack_upload.block"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" /> 
					</external>
					<var name="object" />
					<var name="object_id" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
					<dict action="lookup" key="object_id" val="object" />
				</trigger>
			</actions>
		</request>
	</resource>

	<resource name="UnShare_file_mime" path="/api/files\.unshare">
		<id>
			<match field="content-type" mtype="strstr" rhs="multipart/form-data" />
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="reset-var" /> 
			<assign lhs="object_id" order="2" rhs=" " type="reset-var" /> 
		</init>
		<request>
			<info>
				<field encodingtype="MIME" name="post-data" parsertype="mimestream" />
			</info>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="post-data" key="name" mtype="mime-kvp" rhs="token" />					
				</and>
				<assign field="post-data" lhs="tmp_object_id" order="1" type="mime-get-value" />				
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="post-data" key="name" mtype="mime-kvp" rhs="file" />
					<match field="post-data" mtype="mime-parsing-done" />					
				</and>
				<assign field="post-data" lhs="object_id" order="1" type="mime-get-value" />
				<assign lhs="object_type" order="2" rhs="User" type="value" />
				<!-- <assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" /> -->
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger>
				<trigger name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>				
				<trigger name="Delete" order="7" block-template="slack_upload.block"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object_id" />
					<dict action="lookup" key="object_id" val="object" />
					<var name="object" />
					<var name="to_user" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>

	<resource name="permission_change_mime" path="/api/users\.admin\.setAdmin">
		<id>
			<match field="content-type" mtype="strstr" rhs="multipart/form-data" />
		</id>			
		<init>
			<assign lhs="object" order="1" rhs=" " type="reset-var" /> 
			<assign lhs="object_id" order="2" rhs=" " type="reset-var" /> 
		</init>
		<request>
			<info>
				<field encodingtype="MIME" name="post-data" parsertype="mimestream" />
			</info>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="post-data" key="name" mtype="mime-kvp" rhs="token" />					
				</and>
				<assign field="post-data" lhs="tmp_object_id" order="1" type="mime-get-value" />				
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="post-data" key="name" mtype="mime-kvp" rhs="user" />
					<match field="post-data" mtype="mime-parsing-done" />
				</and>
				<assign field="post-data" key="name" lhs="object_id" order="1" type="mime-get-value" />
				<assign lhs="object_type" order="2" rhs="Permission" type="value" />
				<!-- <assign lhs="tmp_object_id" order="4" rhs="from_user" type="value" /> -->
				<trigger name="Dummy" order="5">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger>
				<trigger  name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="Edit" order="7" block-template="slack_upload.block"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" /> 
					</external>
					<var name="object" />
					<var name="object_id" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
					<dict action="lookup" key="object_id" val="object" />
				</trigger>
			</actions>
		</request>
	</resource>	

	<resource name="permission_owner_mime" path="/api/users\.admin\.setOwner">
		<id>
			<match field="content-type" mtype="strstr" rhs="multipart/form-data" />
		</id>			
		<init>
			<assign lhs="object" order="1" rhs=" " type="reset-var" /> 
			<assign lhs="object_id" order="2" rhs=" " type="reset-var" /> 
		</init>
		<request>
			<info>
				<field encodingtype="MIME" name="post-data" parsertype="mimestream" />
			</info>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="post-data" key="name" mtype="mime-kvp" rhs="token" />					
				</and>
				<assign field="post-data" lhs="tmp_object_id" order="1" type="mime-get-value" />				
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="post-data" key="name" mtype="mime-kvp" rhs="user" />
					<match field="post-data" mtype="mime-parsing-done" />
				</and>
				<assign field="post-data" key="name" lhs="object_id" order="1" type="mime-get-value" />
				<assign lhs="object_type" order="2" rhs="Permission" type="value" />
				<!-- 	<assign lhs="tmp_object_id" order="4" rhs="from_user" type="value" /> -->
				<trigger name="Dummy" order="5">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger>
				<trigger  name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="Edit" order="7" block-template="slack_upload.block"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" /> 
					</external>
					<var name="object" />
					<var name="object_id" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
					<dict action="lookup" key="object_id" val="object" />
				</trigger>
			</actions>
		</request>
	</resource>

	<resource name="permission_Regular_mime" path="/api/users\.admin\.setRegular">
		<id>
			<match field="content-type" mtype="strstr" rhs="multipart/form-data" />
		</id>			
		<init>
			<assign lhs="object" order="1" rhs=" " type="reset-var" /> 
			<assign lhs="object_id" order="2" rhs=" " type="reset-var" /> 
		</init>
		<request>
			<info>
				<field encodingtype="MIME" name="post-data" parsertype="mimestream" />
			</info>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="post-data" key="name" mtype="mime-kvp" rhs="token" />					
				</and>
				<assign field="post-data" lhs="tmp_object_id" order="1" type="mime-get-value" />				
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="post-data" key="name" mtype="mime-kvp" rhs="user" />
					<match field="post-data" mtype="mime-parsing-done" />
				</and>
				<assign field="post-data" key="name" lhs="object_id" order="1" type="mime-get-value" />
				<assign lhs="object_type" order="2" rhs="Permission" type="value" />
				<!-- <assign lhs="tmp_object_id" order="4" rhs="from_user" type="value" /> -->
				<trigger name="Dummy" order="5">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger>
				<trigger  name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="Edit" order="7" block-template="slack_upload.block"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" /> 
					</external>
					<var name="object" />
					<var name="object_id" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
					<dict action="lookup" key="object_id" val="object" />
				</trigger>
			</actions>
		</request>
	</resource>
	<resource name="permission_inActive_mime" path="/api/users\.admin\.setInactive">
		<id>
			<match field="content-type" mtype="strstr" rhs="multipart/form-data" />
		</id>			
		<init>
			<assign lhs="object" order="1" rhs=" " type="reset-var" /> 
			<assign lhs="object_id" order="2" rhs=" " type="reset-var" /> 
		</init>
		<request>
			<info>
				<field encodingtype="MIME" name="post-data" parsertype="mimestream" />
			</info>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="post-data" key="name" mtype="mime-kvp" rhs="token" />					
				</and>
				<assign field="post-data" lhs="tmp_object_id" order="1" type="mime-get-value" />				
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="post-data" key="name" mtype="mime-kvp" rhs="user" />
					<match field="post-data" mtype="mime-parsing-done" />
				</and>
				<assign field="post-data" key="name" lhs="object_id" order="1" type="mime-get-value" />
				<assign lhs="object_type" order="2" rhs="Permission" type="value" />
				<!-- <assign lhs="tmp_object_id" order="4" rhs="from_user" type="value" /> -->
				<trigger name="Dummy" order="5">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger>
				<trigger name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="Edit" order="7" block-template="slack_upload.block"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" /> 
					</external>
					<var name="object" />
					<var name="object_id" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
					<dict action="lookup" key="object_id" val="object" />
				</trigger>
			</actions>
		</request>
	</resource>

	<resource name="Create_Publick_Link_mime" path="/api/files\.sharedPublicURL">
		<id>
			<match field="content-type" mtype="strstr" rhs="multipart/form-data" />
			
		</id>			
		<init>
			<assign lhs="object" order="1" rhs=" " type="reset-var" /> 
			<assign lhs="object_id" order="2" rhs=" " type="reset-var" /> 
		</init>
		<request>
			<info>
				<field encodingtype="MIME" name="post-data" parsertype="mimestream" />
			</info>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="post-data" key="name" mtype="mime-kvp" rhs="token" />					
				</and>
				<assign field="post-data" lhs="tmp_object_id" order="1" type="mime-get-value" />				
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="post-data" key="name" mtype="mime-kvp" rhs="file" />
					<match field="post-data" mtype="mime-parsing-done" />
				</and>
				<assign field="post-data" key="name" lhs="object_id" order="1" type="mime-get-value" />
				<assign lhs="object_type" order="2" rhs="Link" type="value" />
				<!-- <assign lhs="tmp_object_id" order="4" rhs="from_user" type="value" /> -->
				<trigger name="Dummy" order="5">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger>
				<trigger name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="Create" order="7" block-template="slack_upload.block"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" /> 
					</external>
					<var name="object" />
					<var name="object_id" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
					<dict action="lookup" key="object_id" val="object" />
				</trigger>
			</actions>
		</request>
	</resource>

	<resource name="Add_Reaction_Post" path="/api/reactions\.add">
		<id>
			<match field="content-type" mtype="strstr" rhs="multipart/form-data" />
		</id>			
		<init>
			<assign lhs="object" order="1" rhs=" " type="reset-var" /> 
			<assign lhs="object_id" order="2" rhs=" " type="reset-var" /> 
		</init>
		<request>
			<info>
				<field encodingtype="MIME" name="post-data" parsertype="mimestream" />
			</info>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="post-data" key="name" mtype="mime-kvp" rhs="token" />					
				</and>
				<assign field="post-data" lhs="tmp_object_id" order="1" type="mime-get-value" />				
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="post-data" key="name" mtype="mime-kvp" rhs="name" />
					<match field="post-data" mtype="mime-parsing-done" />
				</and>
				<!-- <assign field="post-data" key="name" lhs="object" order="1" type="mime-get-value" /> -->
				<assign lhs="object_type" order="2" rhs="Comment" type="value" />
				<!-- <assign lhs="tmp_object_id" order="4" rhs="from_user" type="value" /> -->
				<trigger name="Dummy" order="5">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger>
				<trigger name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="Post" order="7" block-template="slack_upload.block" > 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" /> 
					</external>
					<!-- 	<var name="object" /> -->
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>

	<resource name="Invite_Group_mime" path="/api/groups\.invite">
		<id>
			<match field="content-type" mtype="strstr" rhs="multipart/form-data" />
		</id>			
		<init>
			<assign lhs="object" order="1" rhs=" " type="reset-var" /> 
			<assign lhs="object_id" order="2" rhs=" " type="reset-var" /> 
		</init>
		<request>
			<info>
				<field encodingtype="MIME" name="post-data" parsertype="mimestream" />
			</info>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="post-data" key="name" mtype="mime-kvp" rhs="token" />					
				</and>
				<assign field="post-data" lhs="tmp_object_id" order="1" type="mime-get-value" />				
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="post-data" key="name" mtype="mime-kvp" rhs="user" />
					<match field="post-data" mtype="mime-parsing-done" />
				</and>
				<assign field="post-data" key="name" lhs="object_id" order="1" type="mime-get-value" />
				<assign lhs="object_type" order="2" rhs="User" type="value" />
				<!-- <assign lhs="tmp_object_id" order="4" rhs="from_user" type="value" /> -->
				<trigger name="Dummy" order="5">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger>
				<trigger name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="Invite" order="7" block-template="slack_upload.block"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" /> 
					</external>
					<var name="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
					<var name="object_id" />
					<dict action="lookup" key="object_id" val="object" />
				</trigger>
			</actions>
		</request>
	</resource>

	<resource name="Invite_Channel_mime" path="/api/channels\.invite">
		<id>
			<match field="content-type" mtype="strstr" rhs="multipart/form-data" />
		</id>			
		<init>
			<assign lhs="object" order="1" rhs=" " type="reset-var" /> 
			<assign lhs="object_id" order="2" rhs=" " type="reset-var" /> 
		</init>
		<request>
			<info>
				<field encodingtype="MIME" name="post-data" parsertype="mimestream" />
			</info>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="post-data" key="name" mtype="mime-kvp" rhs="token" />					
				</and>
				<assign field="post-data" lhs="tmp_object_id" order="1" type="mime-get-value" />				
			</actions>

			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="post-data" key="name" mtype="mime-kvp" rhs="users" />
					<match field="post-data" mtype="mime-parsing-done" />
				</and>
				<assign field="post-data" key="name" lhs="object_id" order="1" type="mime-get-value" />
				<assign lhs="object_type" order="2" rhs="User" type="value" />
				<!-- <assign lhs="tmp_object_id" order="4" rhs="from_user" type="value" /> -->
				<trigger name="Dummy" order="5">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger>
				<trigger name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="Invite" order="7" block-template="slack_upload.block"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" /> 
					</external>
					<var name="object" />
					<var name="object_id" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
					<dict action="lookup" key="object_id" val="object" />
				</trigger>
			</actions>
		</request>
	</resource>

	<resource name="Delete_Channel" path="/api/channels\.leave">
		<id>
			<match field="content-type" mtype="strstr" rhs="multipart/form-data" />
		</id>			
		<init>
			<assign lhs="object" order="1" rhs=" " type="reset-var" /> 
			<assign lhs="object_id" order="2" rhs=" " type="reset-var" /> 
		</init>
		<request>
			<info>
				<field encodingtype="MIME" name="post-data" parsertype="mimestream" />
			</info>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="post-data" key="name" mtype="mime-kvp" rhs="token" />					
				</and>
				<assign field="post-data" lhs="tmp_object_id" order="1" type="mime-get-value" />				
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="post-data" key="name" mtype="mime-kvp" rhs="channel" />
					<match field="post-data" mtype="mime-parsing-done" />
				</and>
				<assign field="post-data" key="name" lhs="object_id" order="1" type="mime-get-value" />
				<assign lhs="object_type" order="2" rhs="Channel" type="value" />
				<!-- 	<assign lhs="tmp_object_id" order="4" rhs="from_user" type="value" /> -->
				<trigger name="Dummy" order="5">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger>
				<trigger name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="Delete" order="7" block-template="slack_upload.block"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" /> 
					</external>
					<var name="object" />
					<var name="object_id" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
					<dict action="lookup" key="object_id" val="object" />
				</trigger>
			</actions>
		</request>
	</resource>

	<resource name="Edit_Channel" path="/api/channels\.rename">
		<id>
			<match field="content-type" mtype="strstr" rhs="multipart/form-data" />
		</id>			
		<init>
			<assign lhs="object" order="1" rhs=" " type="reset-var" /> 
			<assign lhs="object_id" order="2" rhs=" " type="reset-var" /> 
		</init>
		<request>
			<info>
				<field encodingtype="MIME" name="post-data" parsertype="mimestream" />
			</info>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="post-data" key="name" mtype="mime-kvp" rhs="token" />					
				</and>
				<assign field="post-data" lhs="tmp_object_id" order="1" type="mime-get-value" />				
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="post-data" key="name" mtype="mime-kvp" rhs="name" />
					<match field="post-data" mtype="mime-parsing-done" />
				</and>
				<assign field="post-data" key="name" lhs="object" order="1" type="mime-get-value" />
				<assign lhs="object_type" order="2" rhs="Channel" type="value" />
				<assign lhs="tmp_object_id" order="4" rhs="from_user" type="value" />
				<trigger name="Dummy" order="5">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger>
				<trigger name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="Edit" order="7" block-template="slack_upload.block"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" /> 
					</external>
					<var name="object" />
					<!-- <var name="object_id" /> -->
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
					<!-- <dict action="lookup" key="object_id" val="object" /> -->
				</trigger>
			</actions>
		</request>
	</resource>

	<resource name="Edit_Group" path="/api/groups\.rename">
		<id>
			<match field="content-type" mtype="strstr" rhs="multipart/form-data" />
		</id>			
		<init>
			<assign lhs="object" order="1" rhs=" " type="reset-var" /> 
			<assign lhs="object_id" order="2" rhs=" " type="reset-var" /> 
		</init>
		<request>
			<info>
				<field encodingtype="MIME" name="post-data" parsertype="mimestream" />
			</info>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="post-data" key="name" mtype="mime-kvp" rhs="token" />					
				</and>
				<assign field="post-data" lhs="tmp_object_id" order="1" type="mime-get-value" />				
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="post-data" key="name" mtype="mime-kvp" rhs="name" />
					<match field="post-data" mtype="mime-parsing-done" />
				</and>
				<assign field="post-data" key="name" lhs="object" order="1" type="mime-get-value" />
				<assign lhs="object_type" order="2" rhs="Groups" type="value" />
				<!-- <assign lhs="tmp_object_id" order="4" rhs="from_user" type="value" /> -->
				<trigger name="Dummy" order="5">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger>
				<trigger name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="Edit" order="7" block-template="slack_upload.block"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" /> 
					</external>
					<var name="object" />					
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />					
				</trigger>
			</actions>
		</request>
	</resource>

	<resource name="unarchive_Group" path="/api/groups\.unarchive">
		<id>
			<match field="content-type" mtype="strstr" rhs="multipart/form-data" />
		</id>			
		<init>
			<assign lhs="object" order="1" rhs=" " type="reset-var" /> 
			<assign lhs="object_id" order="2" rhs=" " type="reset-var" /> 
		</init>
		<request>
			<info>
				<field encodingtype="MIME" name="post-data" parsertype="mimestream" />
			</info>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="post-data" key="name" mtype="mime-kvp" rhs="token" />					
				</and>
				<assign field="post-data" lhs="tmp_object_id" order="1" type="mime-get-value" />				
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="post-data" key="name" mtype="mime-kvp" rhs="channel" />
					<match field="post-data" mtype="mime-parsing-done" />
				</and>
				<assign field="post-data" key="name" lhs="object_id" order="1" type="mime-get-value" />
				<assign lhs="object_type" order="2" rhs="Groups" type="value" />
				<!-- <assign lhs="tmp_object_id" order="4" rhs="from_user" type="value" /> -->
				<trigger name="Dummy" order="5">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger>
				<trigger name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="Create" order="7" block-template="slack_upload.block"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" /> 
					</external>
					<var name="object_id" />
					<var name="object" />					
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />	
					<dict action="lookup" key="object_id" val="object" />	
				</trigger>
			</actions>
		</request>
	</resource>

	<resource name="unarchive_Channel" path="/api/channels\.unarchive">
		<id>
			<match field="content-type" mtype="strstr" rhs="multipart/form-data" />
		</id>			
		<init>
			<assign lhs="object" order="1" rhs=" " type="reset-var" /> 
			<assign lhs="object_id" order="2" rhs=" " type="reset-var" /> 
		</init>
		<request>
			<info>
				<field encodingtype="MIME" name="post-data" parsertype="mimestream" />
			</info>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="post-data" key="name" mtype="mime-kvp" rhs="token" />					
				</and>
				<assign field="post-data" lhs="tmp_object_id" order="1" type="mime-get-value" />				
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="post-data" key="name" mtype="mime-kvp" rhs="channel" />
					<match field="post-data" mtype="mime-parsing-done" />
				</and>
				<assign field="post-data" key="name" lhs="object_id" order="1" type="mime-get-value" />
				<assign lhs="object_type" order="2" rhs="Channels" type="value" />
				<!-- <assign lhs="tmp_object_id" order="4" rhs="from_user" type="value" /> -->
				<trigger name="Dummy" order="5">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger>
				<trigger name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="Create" order="7" block-template="slack_upload.block"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" /> 
					</external>
					<var name="object" />	
					<var name="object_id" />	
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />	
					<dict action="lookup" key="object_id" val="object" />	
				</trigger>
			</actions>
		</request>
	</resource>

	<resource name="Convert_Channel_to_Group_mime" path="/api/channels\.convertToGroup">
		<id>
			<match field="content-type" mtype="strstr" rhs="multipart/form-data" />
		</id>			
		<init>
			<assign lhs="object" order="1" rhs=" " type="reset-var" /> 
			<assign lhs="object_id" order="2" rhs=" " type="reset-var" /> 
		</init>
		<request>
			<info>
				<field encodingtype="MIME" name="post-data" parsertype="mimestream" />
			</info>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="post-data" key="name" mtype="mime-kvp" rhs="token" />					
				</and>
				<assign field="post-data" lhs="tmp_object_id" order="1" type="mime-get-value" />				
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="post-data" key="name" mtype="mime-kvp" rhs="channel" />
					<match field="post-data" mtype="mime-parsing-done" />
				</and>
				<assign field="post-data" key="name" lhs="object_id" order="1" type="mime-get-value" />
				<assign lhs="object_type" order="2" rhs="Channels" type="value" />
				<!-- <assign lhs="tmp_object_id" order="4" rhs="from_user" type="value" /> -->
				<trigger name="Dummy" order="5">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger>
				<trigger name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>				
				<trigger name="Edit" order="7" block-template="slack_upload.block"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" /> 
					</external>
					<var name="object" />	
					<var name="object_id" />	
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />	
					<dict action="lookup" key="object_id" val="object" />	
				</trigger>
			</actions>
		</request>
	</resource>

	<resource name="pin_file_mime" path="/api/pins\.add">
		<id>
			<match field="content-type" mtype="strstr" rhs="multipart/form-data" />
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="value" /> 
			<assign lhs="object_id" order="2" rhs=" " type="value" /> 
		</init>
		<request>
			<info>
				<field encodingtype="MIME" name="post-data" parsertype="mimestream" />
			</info>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="post-data" key="name" mtype="mime-kvp" rhs="token" />					
				</and>
				<assign field="post-data" lhs="tmp_object_id" order="1" type="mime-get-value" />				
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="post-data" key="name" mtype="mime-kvp" rhs="channel" />
					<match field="post-data" mtype="mime-parsing-done" />
				</and>
				<assign field="post-data" key="name" lhs="object_id" order="1" type="mime-get-value" />
				<assign lhs="object_type" order="2" rhs="File" type="value" />
				<!-- <assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" /> -->
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 
				<trigger name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="Edit" order="7" block-template="slack_upload.block"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object_id" />
					<dict action="lookup" key="object_id" val="object" />
					<var name="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>

	<resource name="unpin_file_mime" path="/api/pins\.remove">
		<id>
			<match field="content-type" mtype="strstr" rhs="multipart/form-data" />
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="value" /> 
			<assign lhs="object_id" order="2" rhs=" " type="value" /> 
		</init>
		<request>
			<info>
				<field encodingtype="MIME" name="post-data" parsertype="mimestream" />
			</info>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="post-data" key="name" mtype="mime-kvp" rhs="token" />					
				</and>
				<assign field="post-data" lhs="tmp_object_id" order="1" type="mime-get-value" />				
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="post-data" key="name" mtype="mime-kvp" rhs="channel" />
					<match field="post-data" mtype="mime-parsing-done" />
				</and>
				<assign field="post-data" key="name" lhs="object_id" order="1" type="mime-get-value" />
				<assign lhs="object_type" order="2" rhs="File" type="value" />
				<!-- <assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" /> -->
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 
				<trigger name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="Edit" order="7" block-template="slack_upload.block"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object_id" />
					<dict action="lookup" key="object_id" val="object" />
					<var name="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>

	<resource name="view_statictics" path="/admin/stats">
		<init>
			<assign lhs="object" order="1" rhs=" " type="value" /> 
			<assign lhs="object_id" order="2" rhs=" " type="value" /> 
		</init>
		<request>
			<info>
				<field encodingtype="MIME" name="post-data" parsertype="mimestream" />
			</info>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="post-data" key="name" mtype="mime-kvp" rhs="token" />					
				</and>
				<assign field="post-data" lhs="tmp_object_id" order="1" type="mime-get-value" />				
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="get" />
					<match field="post-data" mtype="mime-parsing-done" />
				</and>
				<assign lhs="object_type" order="2" rhs="Statistics" type="value" />
				<!-- 	<assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" /> -->
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 
				<trigger name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="View" order="7"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>

	<!-- <resource name="setpurpose_channel_mime" path="/api/channels\.setPurpose">
		<id>
			<match field="content-type" mtype="strstr" rhs="multipart/form-data" />
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="value" /> 
			<assign lhs="object_id" order="2" rhs=" " type="value" /> 
		</init>
		<request>
			<info>
				<field encodingtype="MIME" name="post-data" parsertype="mimestream" />
			</info>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="post-data" key="name" mtype="mime-kvp" rhs="token" />					
				</and>
				<assign field="post-data" lhs="tmp_object_id" order="1" type="mime-get-value" />				
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="post-data" key="name" mtype="mime-kvp" rhs="purpose" />
					<match field="post-data" mtype="mime-parsing-done" />
				</and>
				<assign field="post-data" key="name" lhs="object" order="1" type="mime-get-value" />
				<assign lhs="object_type" order="2" rhs="Channel" type="value" />
				
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 
				<trigger name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="Edit" order="8" block-template="slack_upload.block"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource> -->


	<resource name="setpurpose_group_mime" path="/api/groups\.setPurpose">
		<id>
			<match field="content-type" mtype="strstr" rhs="multipart/form-data" />
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="value" /> 
			<assign lhs="object_id" order="2" rhs=" " type="value" /> 
		</init>
		<request>
			<info>
				<field encodingtype="MIME" name="post-data" parsertype="mimestream" />
			</info>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="post-data" key="name" mtype="mime-kvp" rhs="token" />					
				</and>
				<assign field="post-data" lhs="tmp_object_id" order="1" type="mime-get-value" />				
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="post-data" key="name" mtype="mime-kvp" rhs="purpose" />
					<match field="post-data" mtype="mime-parsing-done" />
				</and>
				<assign field="post-data" key="name" lhs="object" order="1" type="mime-get-value" />
				<assign lhs="object_type" order="2" rhs="Group" type="value" />
				<!-- <assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" /> -->
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 
				<trigger name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="Edit" order="8" block-template="slack_upload.block"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>
	<resource name="view_billing" path="/admin/billing">
		<init>
			<assign lhs="object" order="1" rhs=" " type="value" /> 
			<assign lhs="object_id" order="2" rhs=" " type="value" /> 
		</init>
		<request>
			<info>
				<field encodingtype="MIME" name="post-data" parsertype="mimestream" />
			</info>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="post-data" key="name" mtype="mime-kvp" rhs="token" />					
				</and>
				<assign field="post-data" lhs="tmp_object_id" order="1" type="mime-get-value" />				
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="get" />
					<match field="post-data" mtype="mime-parsing-done" />
				</and>
				<assign lhs="object_type" order="2" rhs="Payment" type="value" />
				<!-- <assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" /> -->
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 
				<trigger name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="View" order="7"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>

	<!-- 	Customize Slack -->
	<resource name="view_slackbox" path="/customize/slackbot">
		<init>
			<assign lhs="object" order="1" rhs=" " type="value" /> 
			<assign lhs="object_id" order="2" rhs=" " type="value" /> 
		</init>
		<request>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>	
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="get" />
				</and>
				<assign lhs="object_type" order="2" rhs="Settings" type="value" />
				<assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" />
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 
				<trigger name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="View" order="7" > 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>
	<resource name="view_profile" path="/customize/profile">
		<init>
			<assign lhs="object" order="1" rhs=" " type="value" /> 
			<assign lhs="object_id" order="2" rhs=" " type="value" /> 
		</init>
		<request>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>	
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="get" />
				</and>
				<assign lhs="object_type" order="2" rhs="Settings" type="value" />
				<assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" />
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 
				<trigger name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="View" order="7" > 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>
	<resource name="add_response_mime" path="/api/slackbot\.responses\.add">
		<id>
			<match field="content-type" mtype="strstr" rhs="multipart/form-data" />
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="value" /> 
			<assign lhs="object_id" order="2" rhs=" " type="value" /> 
		</init>
		<request>
			<info>
				<field encodingtype="MIME" name="post-data" parsertype="mimestream" />
			</info>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="post-data" key="name" mtype="mime-kvp" rhs="token" />					
				</and>
				<assign field="post-data" lhs="tmp_object_id" order="1" type="mime-get-value" />				
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="post-data" key="name" mtype="mime-kvp" rhs="responses" />
					<match field="post-data" mtype="mime-parsing-done" />
				</and>
				<assign field="post-data" key="name" lhs="object" order="1" type="mime-get-value" />
				<assign lhs="object_type" order="2" rhs="Response" type="value" />
				<assign lhs="tmp" order="3" rhs="1131" type="value" />
				<assign lhs="tmp_object_id" order="4" rhs="from_user" type="value" />
				<trigger name="Dummy" order="5">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 
				<trigger name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="Create" order="7" block-template="slack_upload.block"> 
					<external>
						<action name="nspolicy_lookup" />
					</external>
					<var name="object" />
					<var name="object_id" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
		<response>
			<info>
				<field encodingtype="JSON" name="resp-body" parsertype="jsonstream" />
			</info>
			<actions>
				<and>
					<match lhsvar="tmp" mtype="eq" rhs="1131" />
					<match field="resp-body" mtype="struct-search-keys" searchkeys="{response{id}}" />
					<match field="status" key="http_statuscode" mtype="nsdef" rhs="ok" />
				</and>
				<assign field="resp-body" lhs="object_id" order="1" searchkeys="{response{id}}" type="struct-get-value" />
				<assign lhs="tmp" order="2" rhs="0" type="value" />
				<assign lhs="object_type" order="3" rhs="Response" type="value" />
				<!-- <assign lhs="tmp_object_id" order="4" rhs="from_user" type="value" /> -->
				<trigger name="Dummy" order="5">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger>
				<trigger name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="Create" order="7"> 
					<external>
						<action name="send_event" />
					</external>
					<var name="object" />
					<var name="object_id" />
					<dict action="update" key="object_id" val="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</response>
	</resource>

	<resource name="edit_response_mime" path="/api/slackbot\.responses\.edit">
		<id>
			<match field="content-type" mtype="strstr" rhs="multipart/form-data" />
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="value" /> 
			<assign lhs="object_id" order="2" rhs=" " type="value" /> 
		</init>
		<request>
			<info>
				<field encodingtype="MIME" name="post-data" parsertype="mimestream" />
			</info>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="post-data" key="name" mtype="mime-kvp" rhs="token" />					
				</and>
				<assign field="post-data" lhs="tmp_object_id" order="1" type="mime-get-value" />				
			</actions>

			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="post-data" key="name" mtype="mime-kvp" rhs="responses" />
					<match field="post-data" mtype="mime-parsing-done" />
				</and>
				<assign field="post-data" key="name" lhs="object" order="1" type="mime-get-value" />
				<assign lhs="object_type" order="2" rhs="Response" type="value" />
				<assign lhs="tmp" order="3" rhs="1141" type="value" />
				<!-- <assign lhs="tmp_object_id" order="4" rhs="from_user" type="value" /> -->
				<trigger name="Dummy" order="5">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 
				<trigger name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="Edit" order="8" block-template="slack_upload.block"> 
					<external>
						<action name="nspolicy_lookup" />
					</external>
					<var name="object" />
					<var name="object_id" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
		<response>
			<info>
				<field encodingtype="JSON" name="resp-body" parsertype="jsonstream" />
			</info>
			<actions>
				<and>
					<match lhsvar="tmp" mtype="eq" rhs="1141" />
					<match field="resp-body" mtype="struct-search-keys" searchkeys="{response{id}}" />
					<match field="status" key="http_statuscode" mtype="nsdef" rhs="ok" />
				</and>
				<assign field="resp-body" lhs="object_id" order="1" searchkeys="{response{id}}" type="struct-get-value" />
				<assign lhs="tmp" order="2" rhs="0" type="value" />
				<assign lhs="object_type" order="3" rhs="Response" type="value" />
				<assign lhs="tmp_object_id" order="4" rhs="from_user" type="value" />
				<trigger name="Dummy" order="5">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger>
				<trigger name="Edit" order="7"> 
					<external>
						<action name="send_event" />
					</external>
					<var name="object" />
					<var name="object_id" />
					<dict action="update" key="object_id" val="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</response>
	</resource>

	<resource name="delete_response_mime" path="/api/slackbot\.responses\.delete">
		<id>
			<match field="content-type" mtype="strstr" rhs="multipart/form-data" />
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="value" /> 
			<assign lhs="object_id" order="2" rhs=" " type="value" /> 
		</init>
		<request>
			<info>
				<field encodingtype="MIME" name="post-data" parsertype="mimestream" />
			</info>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="post-data" key="name" mtype="mime-kvp" rhs="token" />					
				</and>
				<assign field="post-data" lhs="tmp_object_id" order="1" type="mime-get-value" />				
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="post-data" key="name" mtype="mime-kvp" rhs="response" />
					<match field="post-data" mtype="mime-parsing-done" />
				</and>
				<assign field="post-data" key="name" lhs="object_id" order="1" type="mime-get-value" />
				<assign lhs="object_type" order="2" rhs="Response" type="value" />
				<!-- <assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" /> -->
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 
				<trigger name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="Delete" order="7" block-template="slack_upload.block"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object_id" />
					<dict action="lookup" key="object_id" val="object" />
					<var name="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>

	<resource name="add_message_mime" path="/api/team\.loading\.addMsg">
		<id>
			<match field="content-type" mtype="strstr" rhs="multipart/form-data" />
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="value" /> 
			<assign lhs="object_id" order="2" rhs=" " type="value" /> 
		</init>
		<request>
			<info>
				<field encodingtype="MIME" name="post-data" parsertype="mimestream" />
			</info>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="post-data" key="name" mtype="mime-kvp" rhs="token" />					
				</and>
				<assign field="post-data" lhs="tmp_object_id" order="1" type="mime-get-value" />				
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="post-data" key="name" mtype="mime-kvp" rhs="message" />
					<match field="post-data" mtype="mime-parsing-done" />
				</and>
				<!-- <assign field="post-data" key="name" lhs="object" order="1" type="mime-get-value" /> -->
				<assign lhs="object_type" order="2" rhs="Message" type="value" />
				<assign lhs="tmp" order="3" rhs="1151" type="value" />
				<!-- <assign lhs="tmp_object_id" order="4" rhs="from_user" type="value" /> -->
				<trigger name="Dummy" order="5">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 
				<trigger name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="Create" order="6" block-template="slack_upload.block"> 
					<external>
						<action name="nspolicy_lookup" />
					</external>
					<!-- <var name="object" /> -->
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
		<response>
			<info>
				<field encodingtype="JSON" name="resp-body" parsertype="jsonstream" />
			</info>
			<actions>
				<and>
					<match lhsvar="tmp" mtype="eq" rhs="1151" />
					<match field="resp-body" mtype="struct-search-keys" searchkeys="{id}" />
					<match field="status" key="http_statuscode" mtype="nsdef" rhs="ok" />
				</and>
				<assign field="resp-body" lhs="object_id" order="1" searchkeys="{id}" type="struct-get-value" />
				<assign lhs="tmp" order="2" rhs="0" type="value" />
				<trigger name="Create" order="7"> 
					<external>
						<action name="send_event" />
					</external>
					<var name="object" />
					<var name="object_id" />
					<dict action="update" key="object_id" val="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</response>
	</resource>
	<resource name="delete_message_mime" path="/api/team\.loading\.deleteMsg">
		<id>
			<match field="content-type" mtype="strstr" rhs="multipart/form-data" />
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="value" /> 
			<assign lhs="object_id" order="2" rhs=" " type="value" /> 
		</init>
		<request>
			<info>
				<field encodingtype="MIME" name="post-data" parsertype="mimestream" />
			</info>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="post-data" key="name" mtype="mime-kvp" rhs="token" />					
				</and>
				<assign field="post-data" lhs="tmp_object_id" order="1" type="mime-get-value" />				
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="post-data" key="name" mtype="mime-kvp" rhs="id" />
					<match field="post-data" mtype="mime-parsing-done" />
				</and>
				<assign field="post-data" key="name" lhs="object_id" order="1" type="mime-get-value" />
				<assign lhs="object_type" order="2" rhs="Message" type="value" />
				<!-- <assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" /> -->
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 
				<trigger name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="Delete" order="7" block-template="slack_upload.block"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object_id" />
					<!-- <dict action="lookup" key="object_id" val="object" />
					<var name="object" /> -->
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>

	<resource name="enable_message_category_mime" path="/api/team\.loading\.enableCategory">
		<id>
			<match field="content-type" mtype="strstr" rhs="multipart/form-data" />
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="value" /> 
			<assign lhs="object_id" order="2" rhs=" " type="value" /> 
		</init>
		<request>
			<info>
				<field encodingtype="MIME" name="post-data" parsertype="mimestream" />
			</info>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="post-data" key="name" mtype="mime-kvp" rhs="token" />					
				</and>
				<assign field="post-data" lhs="tmp_object_id" order="1" type="mime-get-value" />				
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="post-data" key="name" mtype="mime-kvp" rhs="category" />
					<match field="post-data" mtype="mime-parsing-done" />
				</and>
				<assign field="post-data" key="name" lhs="object_id" order="1" type="mime-get-value" />
				<assign lhs="object_type" order="2" rhs="Message" type="value" />
				<!-- <assign lhs="object" order="2" rhs="Motivational Messages" type="value" /> -->
				<!-- <assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" /> -->
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger>
				<trigger name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>				
				<trigger name="Create" order="7" block-template="slack_upload.block"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object_id" />
					<!-- <var name="object" /> -->
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>
	<resource name="disable_message_category_mime" path="/api/team\.loading\.disableCategory">
		<id>
			<match field="content-type" mtype="strstr" rhs="multipart/form-data" />
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="value" /> 
			<assign lhs="object_id" order="2" rhs=" " type="value" /> 
		</init>
		<request>
			<info>
				<field encodingtype="MIME" name="post-data" parsertype="mimestream" />
			</info>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="post-data" key="name" mtype="mime-kvp" rhs="token" />					
				</and>
				<assign field="post-data" lhs="tmp_object_id" order="1" type="mime-get-value" />				
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="post-data" key="name" mtype="mime-kvp" rhs="category" />
					<match field="post-data" mtype="mime-parsing-done" />
				</and>
				<assign field="post-data" key="name" lhs="object_id" order="1" type="mime-get-value" />
				<assign lhs="object_type" order="2" rhs="Message" type="value" />
				<!-- <assign lhs="object" order="2" rhs="Motivational Messages" type="value" /> -->
				<!-- 	<assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" /> -->
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 
				<trigger name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="Delete" order="7" block-template="slack_upload.block"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object_id" />
				<!-- 	<var name="object" /> -->
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>
	<resource name="edit_message_category_mime" path="/api/team\.loading\.enableBuiltin">
		<id>
			<match field="content-type" mtype="strstr" rhs="multipart/form-data" />
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="value" /> 
			<assign lhs="object_id" order="2" rhs=" " type="value" /> 
		</init>
		<request>
			<info>
				<field encodingtype="MIME" name="post-data" parsertype="mimestream" />
			</info>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="post-data" key="name" mtype="mime-kvp" rhs="token" />					
				</and>
				<assign field="post-data" lhs="tmp_object_id" order="1" type="mime-get-value" />				
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="post-data" key="name" mtype="mime-kvp" rhs="category" />
					<match field="post-data" mtype="mime-parsing-done" />
				</and>
				<assign field="post-data" key="name" lhs="object_id" order="1" type="mime-get-value" />
				<assign lhs="object_type" order="2" rhs="Message" type="value" />
				<!-- <assign lhs="object" order="2" rhs="Motivational Messages" type="value" /> -->
				<!-- <assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" /> -->
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 
				<trigger name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="Edit" order="7" block-template="slack_upload.block"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object_id" />
				<!-- 	<var name="object" /> -->
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>

	<!-- Create, Edit, Enable, Disable User Groups -->
	<resource name="create_subteam_mime" path="/api/subteams\.create">
		<id>
			<match field="content-type" mtype="strstr" rhs="multipart/form-data" />
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="value" /> 
			<assign lhs="object_id" order="2" rhs=" " type="value" /> 
		</init>
		<request>
			<info>
				<field encodingtype="MIME" name="post-data" parsertype="mimestream" />
			</info>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="post-data" key="name" mtype="mime-kvp" rhs="token" />					
				</and>
				<assign field="post-data" lhs="tmp_object_id" order="1" type="mime-get-value" />				
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="post-data" key="name" mtype="mime-kvp" rhs="name" />
					<match field="post-data" mtype="mime-parsing-done" />
				</and>
				<assign field="post-data" key="name" lhs="object" order="1" type="mime-get-value" />
				<assign lhs="object_type" order="2" rhs="Team" type="value" />
				<assign lhs="tmp" order="3" rhs="1161" type="value" />
				<!-- <assign lhs="tmp_object_id" order="4" rhs="from_user" type="value" /> -->
				<trigger name="Dummy" order="5">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 
				<trigger name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="Create" order="6" block-template="slack_upload.block"> 
					<external>
						<action name="nspolicy_lookup" />
					</external>
					<var name="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
		<response>
			<info>
				<field encodingtype="JSON" name="resp-body" parsertype="jsonstream" />
			</info>
			<actions>
				<and>
					<match lhsvar="tmp" mtype="eq" rhs="1161" />
					<match field="resp-body" mtype="struct-search-keys" searchkeys="{subteam{id}}" />
					<match field="status" key="http_statuscode" mtype="nsdef" rhs="ok" />
				</and>
				<assign field="resp-body" lhs="object_id" order="1" searchkeys="{subteam{id}}" type="struct-get-value" />
				<assign lhs="tmp" order="2" rhs="0" type="value" />
				<trigger name="Create" order="7"> 
					<external>
						<action name="send_event" />
					</external>
					<var name="object" />
					<var name="object_id" />
					<dict action="update" key="object_id" val="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</response>
	</resource>

	<resource name="edit_subteams_mime" path="/api/subteams\.update">
		<id>
			<match field="content-type" mtype="strstr" rhs="multipart/form-data" />
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="value" /> 
			<assign lhs="object_id" order="2" rhs=" " type="value" /> 
		</init>
		<request>
			<info>
				<field encodingtype="MIME" name="post-data" parsertype="mimestream" />
			</info>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="post-data" key="name" mtype="mime-kvp" rhs="token" />					
				</and>
				<assign field="post-data" lhs="tmp_object_id" order="1" type="mime-get-value" />				
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="post-data" key="name" mtype="mime-kvp" rhs="subteam" />
				</and>
				<assign field="post-data" key="name" lhs="object_id" order="1" type="mime-get-value" />
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="post-data" key="name" mtype="mime-kvp" rhs="name" />
					<match field="post-data" mtype="mime-parsing-done" />
				</and>
				<assign field="post-data" key="name" lhs="object" order="1" type="mime-get-value" />
				<assign lhs="object_type" order="2" rhs="Team" type="value" />
				<!-- <assign lhs="tmp_object_id" order="4" rhs="from_user" type="value" /> -->
				<trigger name="Dummy" order="5">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 
				<trigger name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="Edit" order="6" block-template="slack_upload.block"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object" />
					<var name="object_id" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
					<dict action="update" key="object_id" val="object"/>
				</trigger>
			</actions>
		</request>
	</resource>

	<resource name="edit_subteam_members_mime" path="/api/subteams\.users\.update">
		<id>
			<match field="content-type" mtype="strstr" rhs="multipart/form-data" />
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="value" /> 
			<assign lhs="object_id" order="2" rhs=" " type="value" /> 
		</init>
		<request>
			<info>
				<field encodingtype="MIME" name="post-data" parsertype="mimestream" />
			</info>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="post-data" key="name" mtype="mime-kvp" rhs="token" />					
				</and>
				<assign field="post-data" lhs="tmp_object_id" order="1" type="mime-get-value" />				
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="post-data" key="name" mtype="mime-kvp" rhs="subteam" />
					<match field="post-data" mtype="mime-parsing-done" />
				</and>
				<assign field="post-data" key="name" lhs="object_id" order="1" type="mime-get-value" />
				<assign lhs="object_type" order="2" rhs="Team" type="value" />
				<!-- <assign lhs="tmp_object_id" order="4" rhs="from_user" type="value" /> -->
				<trigger name="Dummy" order="5">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger>
				<trigger name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>				
				<trigger name="Edit" order="6" block-template="slack_upload.block"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object_id" />
					<dict action="lookup" key="object_id" val="object"/>
					<var name="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>

	<resource name="disable_subteam_mime" path="/api/subteams\.disable">
		<id>
			<match field="content-type" mtype="strstr" rhs="multipart/form-data" />
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="value" /> 
			<assign lhs="object_id" order="2" rhs=" " type="value" /> 
		</init>
		<request>
			<info>
				<field encodingtype="MIME" name="post-data" parsertype="mimestream" />
			</info>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="post-data" key="name" mtype="mime-kvp" rhs="token" />					
				</and>
				<assign field="post-data" lhs="tmp_object_id" order="1" type="mime-get-value" />				
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="post-data" key="name" mtype="mime-kvp" rhs="subteam" />
					<match field="post-data" mtype="mime-parsing-done" />
				</and>
				<assign field="post-data" key="name" lhs="object_id" order="1" type="mime-get-value" />
				<assign lhs="object_type" order="2" rhs="Team" type="value" />
				<!-- 	<assign lhs="tmp_object_id" order="4" rhs="from_user" type="value" /> -->
				<trigger name="Dummy" order="5">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 
				<trigger name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="Delete" order="6" block-template="slack_upload.block"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object_id" />
					<dict action="lookup" key="object_id" val="object"/>
					<var name="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>

	<resource name="enable_subteam_mime" path="/api/subteams\.enable">
		<id>
			<match field="content-type" mtype="strstr" rhs="multipart/form-data" />
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="value" /> 
			<assign lhs="object_id" order="2" rhs=" " type="value" /> 
		</init>
		<request>
			<info>
				<field encodingtype="MIME" name="post-data" parsertype="mimestream" />
			</info>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="post-data" key="name" mtype="mime-kvp" rhs="token" />					
				</and>
				<assign field="post-data" lhs="tmp_object_id" order="1" type="mime-get-value" />				
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="post-data" key="name" mtype="mime-kvp" rhs="subteam" />
					<match field="post-data" mtype="mime-parsing-done" />
				</and>
				<assign field="post-data" key="name" lhs="object_id" order="1" type="mime-get-value" />
				<assign lhs="object_type" order="2" rhs="Team" type="value" />
				<!-- <assign lhs="tmp_object_id" order="4" rhs="from_user" type="value" /> -->
				<trigger name="Dummy" order="5">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 
				<trigger name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="Create" order="6" block-template="slack_upload.block"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object_id" />
					<dict action="lookup" key="object_id" val="object"/>
					<var name="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>

	<resource name="Delete_link_mime" path="/api/files\.revokePublicURL">
		<id>
			<match field="content-type" mtype="strstr" rhs="multipart/form-data" />
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="reset-var" /> 
			<assign lhs="object_id" order="2" rhs=" " type="reset-var" /> 
		</init>
		<request>
			<info>
				<field encodingtype="MIME" name="post-data" parsertype="mimestream" />
			</info>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="post-data" key="name" mtype="mime-kvp" rhs="token" />					
				</and>
				<assign field="post-data" lhs="tmp_object_id" order="1" type="mime-get-value" />				
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="post-data" mtype="mime-parsing-done" />
				</and>
				<assign lhs="tmp" order="1" rhs="1009" type="value" />
			</actions>
		</request>
		<response>
			<info>
				<field encodingtype="JSON" name="resp-body" parsertype="jsonstream" />
			</info>
			<actions>
				<and>
					<match lhsvar="tmp" mtype="eq" rhs="1009" />
					<match field="resp-body" mtype="struct-search-keys" searchkeys="{file{title}}" />
				</and>
				<assign field="resp-body" lhs="object" order="1" searchkeys="{file{title}}" type="struct-get-value" />
				<assign lhs="tmp" order="2" rhs="0" type="value" />
				<assign lhs="object_type" order="3" rhs="Link" type="value" />
				<assign lhs="tmp_object_id" order="4" rhs="from_user" type="value" />
				<trigger name="Dummy" order="5">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger>	
				<trigger name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>				
				<trigger name="Delete" order="8" block-template="slack_upload.block" > 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</response>
	</resource>

	<resource name="View_apps" path="/apps">
		<id>
			<match mtype="exact-depth" field="uripath" depth="1" />
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="value" /> 
			<assign lhs="object_id" order="2" rhs=" " type="value" /> 
		</init>
		<request>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="get" />
				</and>
				<assign lhs="object_type" order="2" rhs="App" type="value" />
				<assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" />
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 
				<trigger name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="View" order="7" > 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>
	<resource name="manage_app_integration" path="/apps/manage">
		<id>
			<match mtype="exact-depth" field="uripath" depth="2" />
		</id>
		<request>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="get" />
				</and>
				<assign lhs="object_type" order="3" rhs="App" type="value" />
				<assign lhs="tmp_object_id" order="4" rhs="from_user" type="value" />
				<trigger name="Dummy" order="5">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 
				<trigger name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="View" order="7" > 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>
	<resource name="view_settings" path="/admin/settings">
		<id>
			<match mtype="exact-depth" field="uripath" depth="2" />
		</id>
		<request>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="get" />
				</and>
				<assign lhs="object_type" order="3" rhs="Settings" type="value" />
				<assign lhs="tmp_object_id" order="4" rhs="from_user" type="value" />
				<trigger name="Dummy" order="5">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 
				<trigger name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="View" order="7" > 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>
	<resource name="view_settings1" path="/admin/auth">
		<id>
			<match mtype="exact-depth" field="uripath" depth="2" />
		</id>
		<request>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="get" />
				</and>
				<assign lhs="object_type" order="3" rhs="Settings" type="value" />
				<assign lhs="tmp_object_id" order="4" rhs="from_user" type="value" />
				<trigger name="Dummy" order="5">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 
				<trigger name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="View" order="7" > 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>
	<resource name="view_settings2" path="/admin/attachments">
		<id>
			<match mtype="exact-depth" field="uripath" depth="2" />
		</id>
		<request>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="get" />
				</and>
				<assign lhs="object_type" order="3" rhs="Settings" type="value" />
				<assign lhs="tmp_object_id" order="4" rhs="from_user" type="value" />
				<trigger name="Dummy" order="5">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 
				<trigger name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="View" order="7" > 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>
	<resource name="view_settings3" path="/admin/auth/saml">
		<id>
			<match mtype="exact-depth" field="uripath" depth="3" />
		</id>
		<request>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="get" />
				</and>
				<assign lhs="object_type" order="3" rhs="Settings" type="value" />
				<assign lhs="tmp_object_id" order="4" rhs="from_user" type="value" />
				<trigger name="Dummy" order="5">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 
				<trigger name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="View" order="7" > 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>
	<resource name="edit_google_auth_settings" path="/admin/auth/google">
		<id>
			<and>
				<match mtype="exact-depth" field="uripath" depth="3" />
				<match field="uriparam-key" mtype="strstr" rhs="code" />
			</and>
		</id>
		<request>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="get" />
				</and>
				<assign lhs="object_type" order="3" rhs="Settings" type="value" />
				<assign lhs="tmp_object_id" order="4" rhs="from_user" type="value" />
				<trigger name="Dummy" order="5">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 
				<trigger name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="Edit" order="7" block-template="slack_upload.block"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>
	<resource name="manage_app_integration1" path="/apps/manage/logs">
		<id>
			<match mtype="exact-depth" field="uripath" depth="3" />
		</id>
		<request>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="get" />
				</and>
				<assign lhs="object_type" order="3" rhs="Logs" type="value" />
				<assign lhs="tmp_object_id" order="4" rhs="from_user" type="value" />
				<trigger name="Dummy" order="5">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 
				<trigger name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="View" order="7" > 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>
	<resource name="manage_app_integration2" path="/apps/manage/connections">
		<id>
			<match mtype="exact-depth" field="uripath" depth="3" />
		</id>
		<request>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="get" />
				</and>
				<assign lhs="object_type" order="3" rhs="App" type="value" />
				<assign lhs="tmp_object_id" order="4" rhs="from_user" type="value" />
				<trigger name="Dummy" order="5">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 
				<trigger name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="View" order="7" > 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>
	<resource name="manage_app_integration3" path="/apps/manage/custom-integrations">
		<id>
			<match mtype="exact-depth" field="uripath" depth="3" />
		</id>
		<request>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="get" />
				</and>
				<assign lhs="object_type" order="3" rhs="App" type="value" />
				<assign lhs="tmp_object_id" order="4" rhs="from_user" type="value" />
				<trigger name="Dummy" order="5">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 
				<trigger name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="View" order="7" > 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>

	<resource name="app_integration" path="/apps/new/{temp_var1}">
		<id>
			<match mtype="exact-depth" field="uripath" depth="3" />
		</id>
		<request>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="get" />
				</and>
				<assign lhsvar="object" norm-delim="-" norm-token="norm-rhs" normalize="tokens-normalize" order="1" rhs="temp_var1" type="variable" />
				<assign lhsvar="object_id" norm-delim="-" norm-token="norm-lhs" normalize="tokens-normalize" order="2" rhs="temp_var1" type="variable" />
				<assign lhs="object_type" order="3" rhs="App" type="value" />
				<assign lhs="tmp_object_id" order="4" rhs="from_user" type="value" />
				<trigger name="Dummy" order="5">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 
				<trigger name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="View" order="7" > 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object" />
					<var name="object_id" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
					<dict action="update" key="object_id" val="object"/>
				</trigger>
			</actions>
		</request>
	</resource>

	<resource name="Edit_message_mime" path="/api/chat\.update">
		<id>
			<match field="content-type" mtype="strstr" rhs="multipart/form-data" />
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="value" /> 
			<assign lhs="object_id" order="2" rhs=" " type="value" /> 
		</init>
		<request>
			<info>
				<field encodingtype="MIME" name="post-data" parsertype="mimestream" />
			</info>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="post-data" key="name" mtype="mime-kvp" rhs="token" />					
				</and>
				<assign field="post-data" lhs="tmp_object_id" order="1" type="mime-get-value" />				
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="post-data" key="name" mtype="mime-kvp" rhs="text" />
				</and>
				<!-- <assign field="post-data" key="name" lhs="object" order="1" type="mime-get-value" /> -->
				<assign lhs="object_type" order="2" rhs="Message" type="value" />
				<!-- <assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" /> -->
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 
				<trigger name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="Edit" order="7" block-template="slack_upload.block"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<!-- <var name="object" /> -->
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>
	
	<resource name="Edit_user_profile_mime" path="/api/users\.profile\.set">
		<id>
			<match field="content-type" mtype="strstr" rhs="multipart/form-data" />
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="reset-var" /> 
			<assign lhs="object_id" order="2" rhs=" " type="reset-var" /> 
		</init>
		<request>
			<info>
				<field encodingtype="MIME" name="post-data" parsertype="mimestream" />
			</info>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="post-data" key="name" mtype="mime-kvp" rhs="token" />					
				</and>
				<assign field="post-data" lhs="tmp_object_id" order="1" type="mime-get-value" />				
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<!-- <match field="post-data" key="name" mtype="mime-kvp" rhs="user" /> -->
				</and>
				<assign field="post-data" key="name" lhs="object_id" order="1" type="mime-get-value" />
				<assign lhs="object_type" order="2" rhs="User" type="value" />
				<!-- <assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" /> -->
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 
				<trigger name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="Edit" order="7" block-template="slack_upload.block"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object" />
					<var name="object_id" />
					<dict action="lookup" key="object_id" val="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>

	<resource name="share_chat_message" path="/api/chat\.shareMessage">
		<id>
			<and>
				<match field="content-type" mtype="strstr" rhs="multipart/form-data" />
				<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
			</and>	
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="reset-var" /> 
			<assign lhs="object_id" order="2" rhs=" " type="reset-var" /> 
		</init>
		<request>
			<info>
				<field encodingtype="MIME" name="post-data" parsertype="mimestream" />
			</info>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="post-data" key="name" mtype="mime-kvp" rhs="token" />					
				</and>
				<assign field="post-data" lhs="tmp_object_id" order="1" type="mime-get-value" />				
			</actions>
			<actions>
				<match field="post-data" mtype="mime-parsing-done" />
				<assign field="post-data" key="name" lhs="object_id" order="1" type="mime-get-value" />
				<assign lhs="object_type" order="2" rhs="message" type="value" />				
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 
				<trigger name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="Share" order="7" block-template="slack_upload.block"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<!-- <var name="object" /> -->
					<var name="object_id" />
					<!-- <dict action="lookup" key="object_id" val="object" /> -->
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>
	
	<resource name="unfollow_message" path="/api/subscriptions\.thread\.remove">
		<id>
			<and>
				<match field="content-type" mtype="strstr" rhs="multipart/form-data" />
				<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
			</and>	
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="reset-var" /> 
			<assign lhs="object_id" order="2" rhs=" " type="reset-var" /> 
		</init>
		<request>
			<info>
				<field encodingtype="MIME" name="post-data" parsertype="mimestream" />
			</info>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="post-data" key="name" mtype="mime-kvp" rhs="token" />					
				</and>
				<assign field="post-data" lhs="tmp_object_id" order="1" type="mime-get-value" />				
			</actions>
			<actions>
				<match field="post-data" mtype="mime-parsing-done" />
				<assign field="post-data" key="name" lhs="object_id" order="1" type="mime-get-value" />
				<assign lhs="object_type" order="2" rhs="message" type="value" />				
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 
				<trigger name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="Delete" order="7" block-template="slack_upload.block"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<!-- <var name="object" /> -->
					<var name="object_id" />
					<!-- <dict action="lookup" key="object_id" val="object" /> -->
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>
	
	<resource name="follow_message" path="/api/subscriptions\.thread\.add">
		<id>
			<and>
				<match field="content-type" mtype="strstr" rhs="multipart/form-data" />
				<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
			</and>	
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="reset-var" /> 
			<assign lhs="object_id" order="2" rhs=" " type="reset-var" /> 
		</init>
		<request>
			<info>
				<field encodingtype="MIME" name="post-data" parsertype="mimestream" />
			</info>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="post-data" key="name" mtype="mime-kvp" rhs="token" />					
				</and>
				<assign field="post-data" lhs="tmp_object_id" order="1" type="mime-get-value" />				
			</actions>
			<actions>
				<match field="post-data" mtype="mime-parsing-done" />
				<assign field="post-data" key="name" lhs="object_id" order="1" type="mime-get-value" />
				<assign lhs="object_type" order="2" rhs="message" type="value" />				
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 
				<trigger name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="Follow" order="7" block-template="slack_upload.block"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object" />
					<var name="object_id" />
					<dict action="lookup" key="object_id" val="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>
	
	
	<resource name="Channel_topic_set" path="/api/channels\.setTopic">
		<id>
			<and>
				<match field="content-type" mtype="strstr" rhs="multipart/form-data" />
				<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
			</and>	
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="reset-var" /> 
			<assign lhs="object_id" order="2" rhs=" " type="reset-var" /> 
		</init>
		<request>
			<info>
				<field encodingtype="MIME" name="post-data" parsertype="mimestream" />
			</info>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="post-data" key="name" mtype="mime-kvp" rhs="token" />					
				</and>
				<assign field="post-data" lhs="tmp_object_id" order="1" type="mime-get-value" />				
			</actions>
			<actions>
				<and>
					<match field="post-data" key="name" mtype="mime-kvp" rhs="topic" />					
				</and>
				<assign field="post-data" lhs="object" order="1" type="mime-get-value" />				
			</actions>
			<actions>
				<match field="post-data" mtype="mime-parsing-done" />
				<assign lhs="object_type" order="2" rhs="Channel" type="value" />				
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 
				<trigger name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="Create" order="7" block-template="slack_upload.block"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>
	
	<resource name="Channel_Purpose" path="/api/channels\.setPurpose">
		<id>
			<and>
				<match field="content-type" mtype="strstr" rhs="multipart/form-data" />
				<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
			</and>	
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="reset-var" /> 
			<assign lhs="object_id" order="2" rhs=" " type="reset-var" /> 
		</init>
		<request>
			<info>
				<field encodingtype="MIME" name="post-data" parsertype="mimestream" />
			</info>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="post-data" key="name" mtype="mime-kvp" rhs="token" />					
				</and>
				<assign field="post-data" lhs="tmp_object_id" order="1" type="mime-get-value" />				
			</actions>
			<actions>
				<and>
					<match field="post-data" key="name" mtype="mime-kvp" rhs="purpose" />					
				</and>
				<assign field="post-data" lhs="object" order="1" type="mime-get-value" />				
			</actions>
			<actions>	
				<match field="post-data" mtype="mime-parsing-done" />
				<assign lhs="object_type" order="2" rhs="Channel" type="value" />				
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 
				<trigger name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="Edit" order="7" block-template="slack_upload.block"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object" />
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
	</resource>
	
	
	
	<resource name="upload_file_from_external" path="/api/files\.uploadExternal">
		<id>
			<and>
				<match field="content-type" mtype="strstr" rhs="multipart/form-data" />
				<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
			</and>	
		</id>
		<init>
			<assign lhs="object" order="1" rhs=" " type="reset-var" /> 
			<assign lhs="object_id" order="2" rhs=" " type="reset-var" />
			<assign field="content_len" lhs="file_size" type="field" order="3" />	
		</init>
		<request>
			<info>
				<field encodingtype="MIME" name="post-data" parsertype="mimestream" />
			</info>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="post-data" key="name" mtype="mime-kvp" rhs="token" />					
				</and>
				<assign field="post-data" lhs="tmp_object_id" order="1" type="mime-get-value" />				
			</actions>
			<actions>
				<and>
					<match field="post-data" key="name" mtype="mime-kvp" rhs="link" />					
				</and>
				<assign lhs="object_type" order="2" rhs="File" type="value" />				
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 
				<trigger name="Dummy" order="6">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="Upload" order="7" block-template="slack_upload.block"> 
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>								
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
			
			<actions>
				<and>
					<match field="post-data" key="name" mtype="mime-kvp" rhs="filename" />
				</and>
				<assign field="post-data" lhs="object" normalize="uri-decode" order="1" type="mime-get-value" />
				<assign lhs="object_type" order="2" rhs="File" type="value" />                
				<assign lhs="tmp_object_id" order="4" rhs="from_user" type="value" />
				<trigger name="Dummy" order="5">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger>
				<trigger name="Dummy" order="7">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="Upload" order="8" >
					<external>
						<action name="inspect_req" />
						<action name="send_event" />
					</external>
					<var name="object_type" />
					<var name="object" />                    
					<var name="instance_id" />  
					<var name="from_user" />
					<var name="file_size" />
					<var name="object" />
				</trigger> 
			</actions>			
		</request>
	</resource>

	<resource name="Upload_profile_photo" path="/api/users\.preparePhoto"> 
		<init>
			<assign lhs="object" order="1" rhs=" " type="value" /> 
			<assign lhs="object_id" order="2" rhs=" " type="value" /> 
		</init>
		<request>
			<info>
				<field encodingtype="MIME" name="post-data" parsertype="mimestream" />
			</info>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
				<assign field="content_len" lhs="file_size" type="field" order="1" />
			</actions>
			<actions>
				<and>
					<match field="post-data" key="name" mtype="mime-kvp" rhs="token" />					
				</and>
				<assign field="post-data" lhs="tmp_object_id" order="1" type="mime-get-value" />				
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="post-data" key="filename" mtype="mime-kvp" rhs="filename" />
				</and>
				<assign field="post-data" lhs="object" normalize="uri-decode" order="1" type="mime-get-value" />
				<assign lhs="object_type" order="2" rhs="Image" type="value" />
				<assign lhs="tmp" order="3" rhs="101" type="value" />
				<!-- <assign lhs="tmp_object_id" order="4" rhs="from_user" type="value" /> -->
				<trigger name="Dummy" order="5">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 
				<trigger  name="Dummy" order="7">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="Upload" order="8" block-template="slack_upload.block">
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object_type" />
					<var name="object" />
					<var name="instance_id" />  
					<var name="from_user" />
					<var name="file_size" />
				</trigger> 
			</actions>
		</request>
	</resource>

	<resource name="Edit_profile_photo" path="/api/users\.setPhoto"> 
		<request>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
				</and>
				<assign lhs="object_type" order="2" rhs="Settings" type="value" />
				<assign lhs="tmp" order="3" rhs="101" type="value" />
				<assign lhs="tmp_object_id" order="4" rhs="from_user" type="value" />
				<trigger name="Dummy" order="5">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger> 

				<trigger name="Dummy" order="7">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="Edit" order="8" block-template="slack_upload.block">
					<external>
						<action name="nspolicy_lookup" />
						<action name="send_event" />
					</external>
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger> 
			</actions>
		</request>
	</resource>

	<resource name="instanceid_extraction_fromenterprise" path="/api/enterprise.info"> 
		<id>
			<match field="uripath" mtype="exact-depth" depth="2" />			
		</id>
		<init>			
			<assign type="reset-var" lhs="tmp_object_id" order="2" />
			<assign type="reset-var" lhs="object_id" order="3" />
			<assign type="reset-var" lhs="from_user" order="4" />
			<assign type="reset-var" lhs="tmpShare" order="5" />
			<assign type="reset-var" lhs="object" order="6" />
		</init>	
		<request>		
			<info>
				<field encodingtype="MIME" name="post-data" parsertype="mimestream" />
			</info>
			<actions>
				<assign field="host" lhs="object" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="post-data" key="name" mtype="mime-kvp" rhs="token" />					
				</and>
				<assign field="post-data" lhs="tmp_object_id" order="1" type="mime-get-value" />				
			</actions>			
		</request>	
		<response>
			<info>
				<field encodingtype="JSON" name="resp-body" parsertype="jsonstream" />
			</info>		
			<actions>
				<and>
					<match field="resp-body" mtype="struct-search-keys" searchkeys="{enterprise{domain}}" />
				</and>
				<assign field="resp-body" lhs="object_id" order="1" searchkeys="{enterprise{domain}}" type="struct-get-value" />
				<trigger name="Dummy" order="5">
					<var name="object" />  
					<var name="object_id" />  
					<dict action="update" dbtype="app-session-persist-db" key="object" val="object_id" />
				</trigger>
			</actions>
			<actions>
				<and>
					<match field="resp-body" mtype="struct-search-keys" searchkeys="{enterprise{primary_owner{email}}}" />
				</and>
				<assign type="reset-var" lhs="from_user" order="1" />
				<assign field="resp-body" lhs="from_user" order="2" searchkeys="{enterprise{primary_owner{email}}}" type="struct-get-value" />

				<trigger name="Dummy" order="3">
					<var name="tmpShare" />
					<var name="from_user" />
					<dict action="lookup" dbtype="app-session-persist-db" key="from_user" val="tmpShare" />
				</trigger>
				<trigger name="Dummy" order="4">
					<var name="tmpShare" />
					<var name="tmp_object_id" />
					<dict action="modify-key" dbtype="app-session-persist-db" key="tmpShare" newkey="tmp_object_id" />
				</trigger>				
				<trigger name="Dummy" order="6">
					<var name="tmp_object_id" />
					<var name="from_user" />
					<dict action="update" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger>
				<trigger name="Dummy" order="7">
					<var name="tmp_object_id" />
					<var name="from_user" />
					<dict action="update" dbtype="app-session-persist-db" key="from_user" val="tmp_object_id" />
				</trigger>
			</actions>
		</response>
	</resource>

	<resource name="instanceid_extraction_fornormal" path="/api/channels\.view"> 
		<id>
			<match field="uripath" mtype="exact-depth" depth="2" />			
		</id>
		<init>			
			<assign type="reset-var" lhs="tmp_object_id" order="2" />
			<assign type="reset-var" lhs="object_id" order="3" />
			<assign type="reset-var" lhs="from_user" order="4" />
			<assign type="reset-var" lhs="tmpShare" order="5" />
			<assign type="reset-var" lhs="object" order="6" />
		</init>	
		<request>		
			<info>
				<field encodingtype="MIME" name="post-data" parsertype="mimestream" />
			</info>
			<actions>
				<assign field="host" lhs="object" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
			</actions>
			<actions>
				<and>
					<match field="method" key="httpmethods" mtype="nsdef" rhs="post" />
					<match field="post-data" key="name" mtype="mime-kvp" rhs="token" />					
				</and>
				<assign field="post-data" lhs="tmp_object_id" order="1" type="mime-get-value" />				
			</actions>			
		</request>	
		<response>
			<info>
				<field encodingtype="JSON" name="resp-body" parsertype="jsonstream" />
			</info>	
			<actions>
				<and>
					<match field="resp-body" mtype="struct-search-keys" searchkeys="{self{profile{email}}}" />
				</and>
				<assign field="resp-body" lhs="from_user" order="1" searchkeys="{self{profile{email}}}" type="struct-get-value" />				
				<trigger name="Dummy" order="3">
					<var name="tmpShare" />
					<var name="from_user" />
					<dict action="lookup" dbtype="app-session-persist-db" key="from_user" val="tmpShare" />
				</trigger>
				<trigger name="Dummy" order="4">
					<var name="tmpShare" />
					<var name="tmp_object_id" />
					<dict action="modify-key" dbtype="app-session-persist-db" key="tmpShare" newkey="tmp_object_id" />
				</trigger>
				<trigger name="Dummy" order="6">
					<var name="tmp_object_id" />
					<var name="from_user" />
					<dict action="update" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger>
				<trigger name="Dummy" order="7">
					<var name="tmp_object_id" />
					<var name="from_user" />
					<dict action="update" dbtype="app-session-persist-db" key="from_user" val="tmp_object_id" />
				</trigger>
			</actions>			
		</response>
	</resource>
	
	<resource name="login-sso" path="/sso/saml">
		<id>
			<and>
				<match field="postdata-key" mtype="kvp" key="SAMLResponse" rhs="SAMLResponse"/>
				<match field="method" mtype="nsdef" key="httpmethods" rhs="post"/>			
			</and>
		</id>
		
		<request>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />				
				<assign lhs="tmp_object_id_instance" rhs="instance_id" type="variable" order="2" />
			</actions>
			<actions>
				<and>
					<match field="postdata-key" mtype="kvp" key="SAMLResponse" rhs="SAMLResponse"/>
				</and>
				<assign lhs="lstr1" order="1" field="postdata-key" key="SAMLResponse" type="key-value" />
				<assign lhs="lstr1" normalize="base64-decode" order="2" rhs="lstr1" type="variable"/>
				<assign lhs="lstr1" normalize="find-replace" norm-find=" " norm-replace="+" order="3" rhs="lstr1" type="variable"/>
				<assign lhs="lstr1" normalize="base64-decode" order="4" rhs="lstr1" type="variable"/>
				<assign lhs="lstr1" norm-delim="emailAddress&quot;>" norm-token="norm-rhs" normalize="str-tokenize" order="5" rhs="lstr1" type="variable"/>
				<assign lhs="from_user" norm-delim="&lt;" norm-token="norm-lhs" normalize="str-tokenize" order="6" rhs="lstr1" type="variable"/>
				<assign lhsvar="object" order="7" rhs="from_user" type="variable" />
				<assign lhs="object_type" rhs="User" order="8" type="value"/>
				<trigger name="Login Attempt" order="9">
					<external>
						<action name="nspolicy_lookup" />						
					</external>
					<var name="object_type" />
					<var name="object" />
					<var name="instance_id" /> 
					<var name="from_user" />
				</trigger>
				<assign order="10" type="reset-var" lhs="lstr1" />
			</actions>
		</request>		
		<response>
			<actions>
				<and>
					<match field="status" mtype="nsdef" key="http_statuscode" rhs="found"/>
				</and>
				<assign lhs="tmp_object_id" order="1" rhs="from_user" type="value" />
				<trigger name="Dummy" order="2">
					<var name="from_user" />  
					<var name="tmp_object_id" /> 
					<dict action="update" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger>
				<trigger name="Dummy" order="3">
					<var name="instance_id" />
					<var name="tmp_object_id_instance" />
					<dict action="update" dbtype="app-session-persist-db" key="tmp_object_id_instance" val="instance_id" />
				</trigger>
				<trigger name="Login Successful" order="4">
					<external>
						<action name="send_event" />
						<action name="nspolicy_lookup" />						
					</external>
					<var name="object_type" />
					<var name="object" />
					<var name="instance_id" /> 
					<var name="from_user" />					
				</trigger>
				<assign order="5" type="reset-var" lhs="lstr1" />
			</actions>
		</response>
	</resource>
	
	<resource name="Join_channel_via_Email_Invitation" path="/join/invite/">
		<id>
			<and>
				<match field="uripath" mtype="exact-depth" depth="3" />
				<match field="method" key="httpmethods" mtype="nsdef" rhs="get" />
			</and>
		</id>			
		<request>
			<actions>
				<assign field="host" lhs="instance_id" normalize="tokens-normalize" order="1" type="field" norm-delim="." norm-token="norm-lhs" />
				<assign lhs="object_type" order="2" rhs="User" type="value" />
				<assign lhs="tmp_object_id" order="3" rhs="from_user" type="value" />
				<trigger name="Dummy" order="4">
					<var name="from_user" />  
					<var name="tmp_object_id" />  
					<dict action="lookup" dbtype="app-session-persist-db" key="tmp_object_id" val="from_user" />
				</trigger>
				<trigger name="Join" order="5" block-template="slack_upload.block"> 
					<external>
						<action name="nspolicy_lookup" />
					</external>
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
				</trigger>
			</actions>
		</request>
		<response>  
			<info>
				<field encodingtype="TEXT" name="resp-body" parsertype="stream" />
            </info> 
			<actions>
				<and>
					<match field="status" key="http_statuscode" mtype="nsdef" rhs="ok" />     
					<match field="resp-body" mtype="decode-key">
                        <key name="invite.email" order="1" />
                    </match>                         
                </and>
				<assign endswith="0x2c" field="resp-body" lhs="object" order="1" startswith="0x2c" type="decode-key-value" />
            </actions>  
			<trigger name="Join" order="2" endprocessing="yes"> 
					<external>
						<action name="send_event" />
					</external>
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
					<var name="object"/>
				</trigger>			
        </response>
	</resource>
	
	<resource name="View All_Native_App" path="/signin">
		<id>
			<and>
				<!-- <match field="uripath" mtype="exact-depth" depth="3" /> -->
				<match field="method" key="httpmethods" mtype="nsdef" rhs="get" />
			</and>
		</id>			
		<!-- <request>
			<actions>
				<match field="method" key="httpmethods" mtype="nsdef" rhs="get" />
				<assign lhs="temp_var1" order="2" rhs="100" type="value" />
			</actions>
		</request> -->
		<response>  
			<info>
				<field encodingtype="TEXT" name="resp-body" parsertype="stream" />
            </info> 
			<actions>
				<and>
					<match field="status" key="http_statuscode" mtype="nsdef" rhs="ok" />  
					<!-- <match lhsvar="temp_var1" mtype="eq" rhs="100" /> -->					
					<match field="resp-body" mtype="decode-key">
                        <key name="team_name" order="1" />
                    </match>                         
                </and>
				<assign endswithstr="&quot;" field="resp-body" lhs="instance_id" order="1" startswithstr="&quot;:&quot;" type="decode-key-value" />
				<assign lhs="temp_var1" rhs="0" type="value" order="2" />
            	<trigger name="View All" order="3" endprocessing="yes" block-redirect-url="https://{instance_id}.slack.com"> 
				<external>
						<action name="send_event" />
						<action name="nspolicy_lookup" />
				</external>
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
					<var name="object"/>
				</trigger>	
			</actions>		
        </response>
	</resource>
	<resource name="View All_Browser" path="/messages">
		<id>
			<and>
				<match field="uripath" mtype="exact-depth" depth="1" />
				<match field="method" key="httpmethods" mtype="nsdef" rhs="get" />
			</and>
		</id>			
		<!-- <request>
			<actions>
				<match field="method" key="httpmethods" mtype="nsdef" rhs="get" />
				<assign lhs="temp_var1" order="2" rhs="100" type="value" />
			</actions>
		</request> -->
		<response>  
			<info>
				<field encodingtype="TEXT" name="resp-body" parsertype="stream" />
            </info> 
			<actions>
				<and>
					<match field="status" key="http_statuscode" mtype="nsdef" rhs="ok" />  
					<!-- <match lhsvar="temp_var1" mtype="eq" rhs="100" />	 -->				
					<match field="resp-body" mtype="decode-key">
                        <key name="&quot;,&quot;domain&quot;" order="1" />
                    </match>                         
                </and>
				<assign endswithstr="&quot;" field="resp-body" lhs="instance_id" order="1" startswithstr=":&quot;" type="decode-key-value" />
				<assign lhs="temp_var1" rhs="0" type="value" order="2" />
            	<trigger name="View All" order="3" endprocessing="yes" block-redirect-url="https://{instance_id}.slack.com">  
				<external>
						<action name="send_event" />
						<action name="nspolicy_lookup" />
				</external>
					<var name="object_type" />
					<var name="instance_id" />  
					<var name="from_user" />
					<var name="object"/>
				</trigger>	
			</actions>		
        </response>
	</resource>
</app>